{
  "openapi": "3.0.3",
  "info": {
    "title": "Solscan Pro API V2",
    "version": "2.0",
    "description": "This API provides access to Solana blockchain data, including account transfers and DeFi activities. It offers various filtering options for precise data retrieval."
  },
  "servers": [
    {
      "url": "http://localhost:9000/v2"
    }
  ],
  "paths": {
    "/account/detail": {
      "get": {
        "tags": [
          "Account APIs"
        ],
        "operationId": "accountDetailApi",
        "summary": "account detail",
        "description": "Get the details of an account",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "A wallet address on solana blockchain",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "account": {
                          "type": "string",
                          "description": "The address of this account"
                        },
                        "lamports": {
                          "type": "number",
                          "description": "The number of lamports assigned to this account"
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of this account"
                        },
                        "executable": {
                          "type": "boolean",
                          "description": "Boolean indicating if the account contains a program"
                        },
                        "owner_program": {
                          "type": "string",
                          "description": "The address of the program this account has been assigned to"
                        },
                        "rent_epoch": {
                          "type": "number",
                          "description": "The epoch at which this account will next owe rent"
                        },
                        "is_oncurve": {
                          "type": "number",
                          "description": "Boolean indicating if the account is on curve or not"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": {
                      "account": "2YcwVbKx9L25Jpaj2vfWSXD5UKugZumWjzEe6suBUJi2",
                      "lamports": 11934280,
                      "type": "system_account",
                      "executable": false,
                      "owner_program": "11111111111111111111111111111111",
                      "rent_epoch": 18446744073709552000,
                      "is_oncurve": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/transfer": {
      "get": {
        "tags": [
          "Account APIs"
        ],
        "operationId": "accountTransferApi",
        "summary": "account transfer",
        "description": "Get transfer data of an account",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "Solana wallet address",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "activity_type",
            "in": "query",
            "description": "Type of transfer",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 30,
              "enum": [
                "ACTIVITY_SPL_TRANSFER",
                "ACTIVITY_SPL_BURN",
                "ACTIVITY_SPL_MINT",
                "ACTIVITY_SPL_CREATE_ACCOUNT"
              ]
            }
          },
          {
            "name": "token_account",
            "in": "query",
            "description": "Filter transfers for a specific token account in the wallet",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Filter transfer data with direction is from an address",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Filter transfers from a specific address",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Filter by token address. For native SOL transfers, use So11111111111111111111111111111111111111111",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Filter by amount range for a specific token. Example: ?amount[]=1&amount[]=2&token=So11111111111111111111111111111111111111112",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "from_time",
            "in": "query",
            "description": "Filter by time range (Unix timestamp in seconds). Example: ?from_time=1720153259&to_time=1720153276",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "to_time",
            "in": "query",
            "description": "Filter by time range (Unix timestamp in seconds). Example: ?from_time=1720153259&to_time=1720153276",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "exclude_amount_zero",
            "in": "query",
            "description": "Exclude transfers with zero amount",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "flow",
            "in": "query",
            "description": "Filter by transfer direction: in or out",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "in",
                "out"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100,
              "default": 10,
              "enum": [
                10,
                20,
                30,
                40,
                60,
                100
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    20,
                    30,
                    40,
                    60,
                    100
                  ]
                }
              ]
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The parameter allows you to specify the field by which the returned list will be sorted",
            "required": false,
            "schema": {
              "type": "string",
              "default": "block_time",
              "deprecated": true,
              "enum": [
                "block_time"
              ]
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The parameter allows you to specify the sort order",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Filter by value range (dollar). Example: ?value[]=1&value[]=10",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "block_time",
            "in": "query",
            "description": "Filter by block time range (Unix timestamp in seconds). Example: ?block_time[]=1720153259&block_time[]=1720153276",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_id": {
                            "type": "number",
                            "description": "Slot Number of activity"
                          },
                          "trans_id": {
                            "type": "string",
                            "description": "Transaction hash or signature"
                          },
                          "block_time": {
                            "type": "number",
                            "description": "Unix timestamp of the slot"
                          },
                          "time": {
                            "type": "string",
                            "description": "Time of the slot"
                          },
                          "activity_type": {
                            "type": "string",
                            "description": "Type of transfer",
                            "enum": [
                              "ACTIVITY_SPL_TRANSFER",
                              "ACTIVITY_SPL_BURN",
                              "ACTIVITY_SPL_MINT",
                              "ACTIVITY_SPL_CREATE_ACCOUNT"
                            ]
                          },
                          "from_address": {
                            "type": "string",
                            "description": "Source address"
                          },
                          "from_token_account": {
                            "type": "string",
                            "description": "Source token account address"
                          },
                          "to_address": {
                            "type": "string",
                            "description": "Destination address"
                          },
                          "to_token_account": {
                            "type": "string",
                            "description": "Destination token account address"
                          },
                          "token_address": {
                            "type": "string",
                            "description": "Token address"
                          },
                          "token_decimals": {
                            "type": "number",
                            "description": "Decimal of token address"
                          },
                          "amount": {
                            "type": "number",
                            "description": "Transfer amount (divide by 10^token_decimals for actual amount)"
                          },
                          "flow": {
                            "type": "string",
                            "description": "Transfer direction",
                            "enum": [
                              "in",
                              "out"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "block_id": 275794898,
                        "trans_id": "4AU5ShM99Db1yXr72jukaUNSJTnJtp76zt6CdL9ghatA3N4HYU9jaHre2HsHqWcKipKCD3MenvdShPsRrAU6CC4f",
                        "block_time": 1720171655,
                        "time": "2024-07-05T09:27:35.000Z",
                        "activity_type": "ACTIVITY_SPL_TRANSFER",
                        "from_address": "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1",
                        "to_address": "6U91aKa8pmMxkJwBCfPTmUEfZi6dHe7DcFq2ALvB2tbB",
                        "token_address": "So11111111111111111111111111111111111111112",
                        "token_decimals": 9,
                        "amount": 1587870559,
                        "flow": "in"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "API status"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error code"
                        },
                        "message": {
                          "type": "string",
                          "description": "Error description"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/defi/activities": {
      "get": {
        "tags": [
          "Account APIs"
        ],
        "operationId": "accountDefiActivitiesApi",
        "summary": "account defi activities",
        "description": "Get defi activities involving an account",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "A Wallet address on solana blockchain",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "activity_type",
            "in": "query",
            "description": "Type of activity data",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 30,
              "enum": [
                "ACTIVITY_TOKEN_SWAP",
                "ACTIVITY_AGG_TOKEN_SWAP",
                "ACTIVITY_TOKEN_ADD_LIQ",
                "ACTIVITY_TOKEN_REMOVE_LIQ",
                "ACTIVITY_SPL_TOKEN_STAKE",
                "ACTIVITY_SPL_TOKEN_UNSTAKE",
                "ACTIVITY_SPL_TOKEN_WITHDRAW_STAKE",
                "ACTIVITY_SPL_INIT_MINT"
              ]
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Filter activities from an address",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Filter by list platform addresses. Maximum 5 addresses",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 5
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Filter by list source addresses. Maximum 5 addresses",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 5
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Filter activities data by token address",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "from_time",
            "in": "query",
            "description": "Filter by time range (Unix timestamp in seconds). Example: ?from_time=1720153259&to_time=1720153276",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "to_time",
            "in": "query",
            "description": "Filter by time range (Unix timestamp in seconds). Example: ?from_time=1720153259&to_time=1720153276",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number items per page",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100,
              "default": 10,
              "enum": [
                10,
                20,
                30,
                40,
                60,
                100
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    20,
                    30,
                    40,
                    60,
                    100
                  ]
                }
              ]
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The parameter allows you to specify the field by which the returned list will be sorted",
            "required": false,
            "schema": {
              "type": "string",
              "default": "block_time",
              "enum": [
                "block_time"
              ]
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The parameter allows you to specify the sort order",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "block_time",
            "in": "query",
            "description": "Used when you want to filter data by block time. Format time: UnixTime in seconds. You need to pass array into http query to filter by start and stop block_time. Example: ?block_time[]=1720153259&block_time[]=1720153276",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_id": {
                            "type": "number",
                            "description": "Slot Number of activity"
                          },
                          "trans_id": {
                            "type": "string",
                            "description": "Transaction Hash or Signature for activity"
                          },
                          "block_time": {
                            "type": "number",
                            "description": "UnixTime of the slot"
                          },
                          "time": {
                            "type": "string",
                            "description": "Time of the slot"
                          },
                          "activity_type": {
                            "type": "string",
                            "description": "Type of transfer.",
                            "enum": [
                              "ACTIVITY_TOKEN_SWAP",
                              "ACTIVITY_AGG_TOKEN_SWAP",
                              "ACTIVITY_TOKEN_ADD_LIQ",
                              "ACTIVITY_TOKEN_REMOVE_LIQ",
                              "ACTIVITY_SPL_TOKEN_STAKE",
                              "ACTIVITY_SPL_TOKEN_UNSTAKE",
                              "ACTIVITY_SPL_TOKEN_WITHDRAW_STAKE",
                              "ACTIVITY_SPL_INIT_MINT"
                            ]
                          },
                          "from_address": {
                            "type": "string",
                            "description": "Transfer from an address"
                          },
                          "to_address": {
                            "type": "string",
                            "description": "Transfer to an address"
                          },
                          "sources": {
                            "type": "array",
                            "description": "sources"
                          },
                          "platform": {
                            "type": "string",
                            "description": "platform"
                          },
                          "routers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "token1": {
                                  "type": "string",
                                  "description": "Token address"
                                },
                                "token1_decimals": {
                                  "type": "number",
                                  "description": "Token decimals"
                                },
                                "amount1": {
                                  "type": "string",
                                  "description": "Amount of token1"
                                },
                                "token2": {
                                  "type": "string",
                                  "description": "Token address"
                                },
                                "token2_decimals": {
                                  "type": "number",
                                  "description": "Token decimals"
                                },
                                "amount2": {
                                  "type": "string",
                                  "description": "Amount of token2"
                                },
                                "child_routers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "token1": {
                                        "type": "string",
                                        "description": "Token address"
                                      },
                                      "token1_decimals": {
                                        "type": "number",
                                        "description": "Token decimals"
                                      },
                                      "amount1": {
                                        "type": "string",
                                        "description": "Amount of token1"
                                      },
                                      "token2": {
                                        "type": "string",
                                        "description": "Token address"
                                      },
                                      "token2_decimals": {
                                        "type": "number",
                                        "description": "Token decimals"
                                      },
                                      "amount2": {
                                        "type": "string",
                                        "description": "Amount of token2"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "block_id": 275994804,
                        "trans_id": "sgccc7AnmQ7mUxk7JPVZWSqD18Dm4eaMv61jte9sWjBakck5QK3UFSLnxMAqwiTUHjF8BXvaHaLAWnzGPRi77Cr",
                        "block_time": 1720263055,
                        "time": "2024-07-06T10:50:55.000Z",
                        "activity_type": "ACTIVITY_AGG_TOKEN_SWAP",
                        "from_address": "ob2htHLoCu2P6tX7RrNVtiG1mYTas8NGJEVLaFEUngk",
                        "to_address": "JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4",
                        "sources": [
                          "CAMMCzo5YL8w4VFF8KVHrK22GGUsp5VTaW7grrKgrWqK"
                        ],
                        "platform": "JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4",
                        "amount_info": {
                          "token1": "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",
                          "token1_decimals": 6,
                          "amount1": 1000000,
                          "token2": "EKpQGSJtjMFqKZ9KQanSqYXRcF8fBopzLHYxdM65zcjm",
                          "token2_decimals": 6,
                          "amount2": 503392,
                          "routers": [
                            {
                              "token1": "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",
                              "token1_decimals": 6,
                              "amount1": "1000000",
                              "token2": "EKpQGSJtjMFqKZ9KQanSqYXRcF8fBopzLHYxdM65zcjm",
                              "token2_decimals": 6,
                              "amount2": "503392"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/balance_change": {
      "get": {
        "tags": [
          "Account APIs"
        ],
        "operationId": "accountBalanceChangeApi",
        "summary": "account balance change activities",
        "description": "Get balance change activities involving an account",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "A Wallet address on solana blockchain",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "token_account",
            "in": "query",
            "description": "A token account of wallet on solana blockchain",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Filter activities data by token address",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "from_time",
            "in": "query",
            "description": "Filter by time range (Unix timestamp in seconds). Example: ?from_time=1720153259&to_time=1720153276",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "to_time",
            "in": "query",
            "description": "Filter by time range (Unix timestamp in seconds). Example: ?from_time=1720153259&to_time=1720153276",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number items per page",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100,
              "default": 10,
              "enum": [
                10,
                20,
                30,
                40,
                60,
                100
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    20,
                    30,
                    40,
                    60,
                    100
                  ]
                }
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "remove_spam",
            "in": "query",
            "description": "The query parameter to determine if spam activities have been removed or not",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Filter by amount range for a specific token. Example: ?amount[]=1&amount[]=2&token=So11111111111111111111111111111111111111112",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "flow",
            "in": "query",
            "description": "Filter by change direction: in or out",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "in",
                "out"
              ]
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The parameter allows you to specify the field by which the returned list will be sorted",
            "required": false,
            "schema": {
              "type": "string",
              "default": "block_time",
              "enum": [
                "block_time"
              ]
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The parameter allows you to specify the sort order",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "block_time",
            "in": "query",
            "description": "Used when you want to filter data by block time. Format time: UnixTime in seconds. You need to pass array into http query to filter by start and stop block_time. Example: ?block_time[]=1720153259&block_time[]=1720153276",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_id": {
                            "type": "number",
                            "description": "Slot number of activity"
                          },
                          "block_time": {
                            "type": "number",
                            "description": "Unix time of the slot"
                          },
                          "time": {
                            "type": "string",
                            "description": "Time of the slot"
                          },
                          "trans_id": {
                            "type": "string",
                            "description": "Transaction hash or signature for activity"
                          },
                          "address": {
                            "type": "string",
                            "description": "The wallet involved in the activity"
                          },
                          "token_address": {
                            "type": "string",
                            "description": "The address of token involved in the activity"
                          },
                          "token_decimals": {
                            "type": "number",
                            "description": "The decimals of token involved in the activity"
                          },
                          "token_account": {
                            "type": "string",
                            "description": "The address of the token account involved in the activity"
                          },
                          "amount": {
                            "type": "number",
                            "description": "The amount of change"
                          },
                          "pre_balance": {
                            "type": "number",
                            "description": "The account balance before executing the transaction"
                          },
                          "post_balance": {
                            "type": "number",
                            "description": "The account balance after executing the transaction"
                          },
                          "change_type": {
                            "type": "string",
                            "description": "The type of account balance change: increase (inc) or decrease (dec)"
                          },
                          "fee": {
                            "type": "number",
                            "description": "The fee of transaction"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "block_id": 245299423,
                        "block_time": 1706718634,
                        "time": "2024-01-31T16:30:34.000Z",
                        "trans_id": "2njDKnCCqM9XEsN3TxqbQdPMg6sTSijevfoinsSMg1hZMhn2ubFCtHRR6ux9huLKd7hAPMxCGKJqZ2wcNveoQyDS",
                        "address": "9KR7WY8ebL5jD99tmzi3RFmk4v4ahwwHQKdqpG47Vsrg",
                        "token_address": "JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN",
                        "token_account": "FSmkHGcjmGuQaB2aKBqnsg35aajitvqjDWiJi9PdFpxB",
                        "token_decimals": 6,
                        "amount": 200000000,
                        "pre_balance": 0,
                        "post_balance": 200000000,
                        "change_type": "inc",
                        "fee": 1005000
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/transactions": {
      "get": {
        "tags": [
          "Account APIs"
        ],
        "operationId": "accountTransactionsApi",
        "summary": "account transactions",
        "description": "Get the list of transactions of an account",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "A wallet address on solana blockchain",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "The signature of the latest transaction of previous page",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30,
              "maximum": 100
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of transactions should be returned",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 40,
              "default": 10,
              "enum": [
                10,
                20,
                30,
                40
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    20,
                    30,
                    40
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "slot": {
                            "type": "number",
                            "description": "Slot number of the transaction"
                          },
                          "fee": {
                            "type": "number",
                            "description": "The fee of the transaction"
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the transaction: Success or Fail"
                          },
                          "signer": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The signers of the transaction"
                          },
                          "block_time": {
                            "type": "number",
                            "description": "Unix time of the slot"
                          },
                          "tx_hash": {
                            "type": "string",
                            "description": "The signature of the transaction"
                          },
                          "parsed_instructions": {
                            "type": "array",
                            "description": "The list of transaction instructions",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The type of the instruction"
                                },
                                "program": {
                                  "type": "string",
                                  "description": "The name of the program"
                                },
                                "program_id": {
                                  "type": "string",
                                  "description": "The address of the program"
                                }
                              }
                            }
                          },
                          "program_ids": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The list of addresses of programs involved in the transaction"
                          },
                          "time": {
                            "type": "string",
                            "description": "Time of the slot"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "slot": 282450328,
                        "fee": 60601,
                        "status": "Fail",
                        "signer": [
                          "ob2htHLoCu2P6tX7RrNVtiG1mYTas8NGJEVLaFEUngk"
                        ],
                        "block_time": 1723176170,
                        "tx_hash": "2k5SKZo9tAgK3w24EozcCSm1doWLmqoFTe8UeSHd2pp7KJbsH4pRdM78hwfDsSTEC7edJtNYAEGryZe5L1uxU5DU",
                        "parsed_instructions": [
                          {
                            "type": "cancelAllAndPlaceOrders",
                            "program": "openbook_v2",
                            "program_id": "opnb2LAfJYbRMAHHvqjCwQxanZn7ReEHp1k81EohpZb"
                          },
                          {
                            "type": "settleFunds",
                            "program": "openbook_v2",
                            "program_id": "opnb2LAfJYbRMAHHvqjCwQxanZn7ReEHp1k81EohpZb"
                          }
                        ],
                        "program_ids": [
                          "ComputeBudget111111111111111111111111111111",
                          "GDDMwNyyx8uB6zrqwBFHjLLG3TBYk2F8Az4yrQC5RzMp",
                          "opnb2LAfJYbRMAHHvqjCwQxanZn7ReEHp1k81EohpZb"
                        ],
                        "time": "2024-08-09T04:02:50.000Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/portfolio": {
      "get": {
        "tags": [
          "Account APIs"
        ],
        "operationId": "accountPortfolioApi",
        "summary": "account portfolio",
        "description": "Get the portfolio for a given address",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "A wallet address on solana blockchain",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "total_value": {
                          "type": "number",
                          "description": "The total value of all tokens in USD"
                        },
                        "native_balance": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "description": "The token raw amount"
                            },
                            "balance": {
                              "type": "number",
                              "description": "The token balance. Calculated by formula: balance = amount / (10 ^ decimals)"
                            },
                            "token_price": {
                              "type": "number",
                              "description": "The token price in USD"
                            },
                            "token_decimals": {
                              "type": "number",
                              "description": "The token decimal"
                            },
                            "token_name": {
                              "type": "string",
                              "description": "The token name"
                            },
                            "token_symbol": {
                              "type": "string",
                              "description": "The token symbol"
                            },
                            "token_icon": {
                              "type": "string",
                              "description": "The token icon"
                            },
                            "value": {
                              "type": "number",
                              "description": "The token value in USD"
                            }
                          }
                        },
                        "tokens": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "token_address": {
                                "type": "string",
                                "description": "The token address"
                              },
                              "amount": {
                                "type": "number",
                                "description": "The token raw amount"
                              },
                              "balance": {
                                "type": "number",
                                "description": "The token balance. Calculated by formula: balance = amount / (10 ^ decimals)"
                              },
                              "token_price": {
                                "type": "number",
                                "description": "The token price in USD"
                              },
                              "token_decimals": {
                                "type": "number",
                                "description": "The token decimal"
                              },
                              "token_name": {
                                "type": "string",
                                "description": "The token name"
                              },
                              "token_symbol": {
                                "type": "string",
                                "description": "The token symbol"
                              },
                              "token_icon": {
                                "type": "string",
                                "description": "The token icon"
                              },
                              "value": {
                                "type": "number",
                                "description": "The token value in USD"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": {
                      "total_value": 21172.229635678654,
                      "native_balance": {
                        "amount": 2039280,
                        "balance": 0.00203928,
                        "token_price": 142.81,
                        "token_decimals": 9,
                        "token_name": "SOL",
                        "token_symbol": "SOL",
                        "token_icon": "https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png",
                        "value": 0.2912295768
                      },
                      "tokens": [
                        {
                          "token_address": "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",
                          "amount": 21176025379,
                          "balance": 21176.025379,
                          "token_price": 0.999807,
                          "token_decimals": 6,
                          "token_name": "USD Coin",
                          "token_symbol": "USDC",
                          "token_icon": "https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v/logo.png",
                          "value": 21171.938406101854
                        }
                      ]
                    },
                    "metadata": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/token-accounts": {
      "get": {
        "tags": [
          "Account APIs"
        ],
        "operationId": "accountTokenAccountApi",
        "summary": "account token-accounts",
        "description": "Get token accounts of an account",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "A Wallet address on solana blockchain",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of token",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "token",
                "nft"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 40,
              "default": 10,
              "enum": [
                10,
                20,
                30,
                40
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    20,
                    30,
                    40
                  ]
                }
              ]
            }
          },
          {
            "name": "hide_zero",
            "in": "query",
            "description": "Filter tokens that have amount is zero",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "token_account": {
                            "type": "string",
                            "description": "Token Account address"
                          },
                          "token_address": {
                            "type": "string",
                            "description": "Token address"
                          },
                          "amount": {
                            "type": "number",
                            "description": "Token account balance"
                          },
                          "token_decimals": {
                            "type": "number",
                            "description": "Decimal of token"
                          },
                          "owner": {
                            "type": "string",
                            "description": "Owner of this token account"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "token_account": "BW4bvMP129TtQkMKFebCqMA7ZC4jBop4yW8PHgTr6u8Z",
                        "token_address": "9LbdhSersRjbkcWWdd4Xpgr8ADi16dwzMU1tM1Ddsq79",
                        "amount": 12000000000000,
                        "token_decimals": 4,
                        "owner": "GThUX1Atko4tqhN2NaiTazWSeFWMuiUvfFnyJyUghFMJ"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/stake": {
      "get": {
        "tags": [
          "Account APIs"
        ],
        "operationId": "accountStakeApi",
        "summary": "account stake",
        "description": "Get the list of stake accounts of an account",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "A wallet address on solana blockchain",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 40,
              "default": 10,
              "enum": [
                10,
                20,
                30,
                40
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    20,
                    30,
                    40
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "description": "The stake amount"
                          },
                          "role": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The roles of the stake account"
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the stake account"
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the stake account"
                          },
                          "voter": {
                            "type": "string",
                            "description": "The address of the vote account"
                          },
                          "active_stake_amount": {
                            "type": "number",
                            "description": "The active stake amount"
                          },
                          "delegated_stake_amount": {
                            "type": "number",
                            "description": "The delegated stake amount"
                          },
                          "sol_balance": {
                            "type": "number",
                            "description": "The SOL balance of the stake account"
                          },
                          "total_reward": {
                            "type": "string",
                            "description": "The total reward of the stake account"
                          },
                          "stake_account": {
                            "type": "string",
                            "description": "The address of the stake account"
                          },
                          "activation_epoch": {
                            "type": "number",
                            "description": "The activation epoch"
                          },
                          "stake_type": {
                            "type": "number",
                            "description": "The stake type"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "amount": 458814660465801,
                        "role": [
                          "staker",
                          "withdrawer"
                        ],
                        "status": "active",
                        "type": "active",
                        "voter": "J1to1yufRnoWn81KYg1XkTWzmKjnYSnmE2VY8DGUJ9Qv",
                        "active_stake_amount": 458814660465801,
                        "delegated_stake_amount": 458814660465801,
                        "sol_balance": 460943646092406,
                        "total_reward": "57305913856583",
                        "stake_account": "2P8jAu5woVjL7wWPGTdeKgybtHnVM5UDAHQTF6F4gqNn",
                        "activation_epoch": 522,
                        "stake_type": 522
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/reward/export": {
      "get": {
        "tags": [
          "Account APIs"
        ],
        "operationId": "accountRewardExportApi",
        "summary": "stake rewards export",
        "description": "Export the rewards for an account. Maximum items: 5000. Without time filter, data will be return for 1 month staking reward.",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "A wallet address on solana blockchain",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "time_from",
            "in": "query",
            "description": "The start time for the export. Format: Unix time in seconds. Default 1 month before time_to",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "time_to",
            "in": "query",
            "description": "The end time for the export. Format: Unix time in seconds. Default current time.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/transfer/export": {
      "get": {
        "tags": [
          "Account APIs"
        ],
        "operationId": "accountTransferExportApi",
        "summary": "account transfer export",
        "description": "Export transfer data of an account",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "Solana wallet address",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "activity_type",
            "in": "query",
            "description": "Type of transfer",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 30,
              "enum": [
                "ACTIVITY_SPL_TRANSFER",
                "ACTIVITY_SPL_BURN",
                "ACTIVITY_SPL_MINT",
                "ACTIVITY_SPL_CREATE_ACCOUNT"
              ]
            }
          },
          {
            "name": "token_account",
            "in": "query",
            "description": "Filter transfers for a specific token account in the wallet",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Filter transfer data with direction is from an address",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Filter transfers from a specific address",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Filter by token address. For native SOL transfers, use So11111111111111111111111111111111111111111",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Filter by amount range for a specific token. Example: ?amount[]=1&amount[]=2&token=So11111111111111111111111111111111111111112",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "from_time",
            "in": "query",
            "description": "Filter by time range (Unix timestamp in seconds). Example: ?from_time=1720153259&to_time=1720153276",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "to_time",
            "in": "query",
            "description": "Filter by time range (Unix timestamp in seconds). Example: ?from_time=1720153259&to_time=1720153276",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "exclude_amount_zero",
            "in": "query",
            "description": "Exclude transfers with zero amount",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "flow",
            "in": "query",
            "description": "Filter by transfer direction: in or out",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "in",
                "out"
              ]
            }
          },
          {
            "name": "block_time",
            "in": "query",
            "description": "Used when you want to filter data by block time. Format time: UnixTime in seconds. You need to pass array into http query to filter by start and stop block_time. Example: ?block_time[]=1720153259&block_time[]=1720153276",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "example": "Signature,Time,Action,From,To,Amount,Decimals,TokenAddress\n2b3KnysvYG7ZrUahHdEs3ySBiRFmrPtSayNVaou74nWzYyGcUm98RrhMAedbG3RnwZwKDovs3hGbT1wpUii2B71s,1728379125,TRANSFER,ob2htHLoCu2P6tX7RrNVtiG1mYTas8NGJEVLaFEUngk,GYbVBW4zjCSN9NiqrqGYumb7RukmgEZVMZj8WkVr2zB8,28004000000000,9,5z3EqYQo9HiCEs3R84RCDMu2n7anpDMxRhdK8PSWmrRC"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "API status"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error code"
                        },
                        "message": {
                          "type": "string",
                          "description": "Error description"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/token/transfer": {
      "get": {
        "tags": [
          "Token APIs"
        ],
        "operationId": "tokenTransferApi",
        "summary": "token transfer",
        "description": "Get transfer data of a token",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "A token address on solana blockchain",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "activity_type",
            "in": "query",
            "description": "Type of transfer data",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 30,
              "enum": [
                "ACTIVITY_SPL_TRANSFER",
                "ACTIVITY_SPL_BURN",
                "ACTIVITY_SPL_MINT",
                "ACTIVITY_SPL_CREATE_ACCOUNT"
              ]
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Filter transfer data with direction is from an address",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Filter transfer data with direction is to an address",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Filter transfer data by by amount. But you need to pass token address first because amount filter will be belong to one token address. Ex: Filter amount from 1 to 2 SOL ?amount[]=1&amont[]=2&token=So11111111111111111111111111111111111111112",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "block_time",
            "in": "query",
            "description": "Used when you want to filter data by block time. Format time: UnixTime in seconds. You need to pass array into http query to filter by start and stop block_time. Example: ?block_time[]=1720153259&block_time[]=1720153276",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "exclude_amount_zero",
            "in": "query",
            "description": "Exculde transfer that has amount is zero",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number items per page",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100,
              "default": 10,
              "enum": [
                10,
                20,
                30,
                40,
                60,
                100
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    20,
                    30,
                    40,
                    60,
                    100
                  ]
                }
              ]
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The parameter allows you to specify the field by which the returned list will be sorted",
            "required": false,
            "schema": {
              "type": "string",
              "default": "block_time",
              "enum": [
                "block_time"
              ]
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The parameter allows you to specify the sort order",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Filter by value range (dollar). Example: ?value[]=1&value[]=10",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_id": {
                            "type": "number",
                            "description": "Slot Number of activity"
                          },
                          "trans_id": {
                            "type": "string",
                            "description": "Transaction Hash or Signature for activity"
                          },
                          "block_time": {
                            "type": "number",
                            "description": "UnixTime of the slot"
                          },
                          "time": {
                            "type": "string",
                            "description": "Time of the slot"
                          },
                          "activity_type": {
                            "type": "string",
                            "description": "Type of transfer.",
                            "enum": [
                              "ACTIVITY_SPL_TRANSFER",
                              "ACTIVITY_SPL_BURN",
                              "ACTIVITY_SPL_MINT",
                              "ACTIVITY_SPL_CREATE_ACCOUNT"
                            ]
                          },
                          "from_address": {
                            "type": "string",
                            "description": "Transfer from an address"
                          },
                          "to_address": {
                            "type": "string",
                            "description": "Transfer to an address"
                          },
                          "token_address": {
                            "type": "string",
                            "description": "The address of the token transferring"
                          },
                          "token_decimals": {
                            "type": "number",
                            "description": "Decimal of token address"
                          },
                          "amount": {
                            "type": "number",
                            "description": "Transfer amount. You need to divide token_decimals to get real amount."
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "block_id": 276312035,
                        "trans_id": "4x6jxJFCgbjLACvXgqb3aRTsrSk6RSccfgreJLgF3wL4xmZ9897ZyPTxvVV7sbukGeNeMqLb12EtQpzrxzhEkeMC",
                        "block_time": 1720408627,
                        "time": "2024-07-08T03:17:07.000Z",
                        "activity_type": "ACTIVITY_SPL_TRANSFER",
                        "from_address": "J6vHZDKghn3dbTG7pcBLzHMnXFoqUEiHVaFfZxojMjXs",
                        "to_address": "7rhxnLV8C77o6d8oz26AgK8x8m5ePsdeRawjqvojbjnQ",
                        "token_address": "DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263",
                        "token_decimals": 5,
                        "amount": 500000000
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/token/defi/activities": {
      "get": {
        "tags": [
          "Token APIs"
        ],
        "operationId": "tokenDefiActivitiesApi",
        "summary": "token defi activities",
        "description": "Get defi activities involving a token",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "A token address on solana blockchain",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Filter activities from an address",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Filter by list platform addresses. Maximum 5 addresses",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 5
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Filter by list source addresses. Maximum 5 addresses",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 5
            }
          },
          {
            "name": "activity_type",
            "in": "query",
            "description": "Type of defi-activity data",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 30,
              "enum": [
                "ACTIVITY_TOKEN_SWAP",
                "ACTIVITY_AGG_TOKEN_SWAP",
                "ACTIVITY_TOKEN_ADD_LIQ",
                "ACTIVITY_TOKEN_REMOVE_LIQ",
                "ACTIVITY_SPL_TOKEN_STAKE",
                "ACTIVITY_SPL_TOKEN_UNSTAKE",
                "ACTIVITY_SPL_TOKEN_WITHDRAW_STAKE",
                "ACTIVITY_SPL_INIT_MINT"
              ]
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Filter activities data by token address",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "from_time",
            "in": "query",
            "description": "Filter by time range (Unix timestamp in seconds). Example: ?from_time=1720153259&to_time=1720153276",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "to_time",
            "in": "query",
            "description": "Filter by time range (Unix timestamp in seconds). Example: ?from_time=1720153259&to_time=1720153276",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number items per page",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100,
              "default": 10,
              "enum": [
                10,
                20,
                30,
                40,
                60,
                100
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    20,
                    30,
                    40,
                    60,
                    100
                  ]
                }
              ]
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The parameter allows you to specify the field by which the returned list will be sorted",
            "required": false,
            "schema": {
              "type": "string",
              "default": "block_time",
              "enum": [
                "block_time"
              ]
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The parameter allows you to specify the sort order",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "block_time",
            "in": "query",
            "description": "Used when you want to filter data by block time. Format time: UnixTime in seconds. You need to pass array into http query to filter by start and stop block_time. Example: ?block_time[]=1720153259&block_time[]=1720153276",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_id": {
                            "type": "number",
                            "description": "Slot Number of activity"
                          },
                          "trans_id": {
                            "type": "string",
                            "description": "Transaction Hash or Signature for activity"
                          },
                          "block_time": {
                            "type": "number",
                            "description": "UnixTime of the slot"
                          },
                          "time": {
                            "type": "string",
                            "description": "Time of the slot"
                          },
                          "activity_type": {
                            "type": "string",
                            "description": "Type of transfer.",
                            "enum": [
                              "ACTIVITY_TOKEN_SWAP",
                              "ACTIVITY_AGG_TOKEN_SWAP",
                              "ACTIVITY_TOKEN_ADD_LIQ",
                              "ACTIVITY_TOKEN_REMOVE_LIQ",
                              "ACTIVITY_SPL_TOKEN_STAKE",
                              "ACTIVITY_SPL_TOKEN_UNSTAKE",
                              "ACTIVITY_SPL_TOKEN_WITHDRAW_STAKE",
                              "ACTIVITY_SPL_INIT_MINT"
                            ]
                          },
                          "from_address": {
                            "type": "string",
                            "description": "Transfer from an address"
                          },
                          "to_address": {
                            "type": "string",
                            "description": "Transfer to an address"
                          },
                          "platform": {
                            "type": "string",
                            "description": "platform"
                          },
                          "sources": {
                            "type": "array",
                            "description": "sources"
                          },
                          "amount_info": {
                            "type": "object",
                            "description": "sources",
                            "properties": {
                              "token1": {
                                "type": "string",
                                "description": "Token address"
                              },
                              "token1_decimals": {
                                "type": "number",
                                "description": "Token decimals"
                              },
                              "amount1": {
                                "type": "number",
                                "description": "Amount of token1"
                              },
                              "token2": {
                                "type": "string",
                                "description": "Token address"
                              },
                              "token2_decimals": {
                                "type": "number",
                                "description": "Token decimals"
                              },
                              "amount2": {
                                "type": "number",
                                "description": "Amount of token2"
                              },
                              "routers": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "token1": {
                                      "type": "string",
                                      "description": "Token address"
                                    },
                                    "token1_decimals": {
                                      "type": "number",
                                      "description": "Token decimals"
                                    },
                                    "amount1": {
                                      "type": "string",
                                      "description": "Amount of token1"
                                    },
                                    "token2": {
                                      "type": "string",
                                      "description": "Token address"
                                    },
                                    "token2_decimals": {
                                      "type": "number",
                                      "description": "Token decimals"
                                    },
                                    "amount2": {
                                      "type": "string",
                                      "description": "Amount of token2"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "block_id": 276316793,
                        "trans_id": "5nNnNLQemrvYCZZJaxHAZnBLvFNaxRM46tAsyx2h1XoC8Xfi5Df773hyEgQtgb4yQJA11zkAGwVgsXTmDnjmnXea",
                        "block_time": 1720410820,
                        "activity_type": "ACTIVITY_AGG_TOKEN_SWAP",
                        "from_address": "DCAKuApAuZtVNYLk3KTAVW9GLWVvPbnb5CxxRRmVgcTr",
                        "to_address": "JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4",
                        "sources": [
                          "2wT8Yq49kHgDzXuPxZSaeLaH1qbmGXtEyPy64bL7aD3c"
                        ],
                        "platform": "JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4",
                        "routers": {
                          "token1": "So11111111111111111111111111111111111111112",
                          "token1_decimals": 9,
                          "amount1": 1392500000,
                          "token2": "DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263",
                          "token2_decimals": 5,
                          "amount2": 885074062301,
                          "child_routers": [
                            {
                              "token1": "So11111111111111111111111111111111111111112",
                              "token1_decimals": 9,
                              "amount1": "1392500000",
                              "token2": "DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263",
                              "token2_decimals": 5,
                              "amount2": "885074062301"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/token/markets": {
      "get": {
        "tags": [
          "Token APIs"
        ],
        "operationId": "tokenMarketsApi",
        "summary": "token markets",
        "description": "Get token markets",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Token pair address",
            "required": true,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The parameter allows you to specify the field by which the returned list will be sorted",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "program",
            "in": "query",
            "description": "Filter by list program addresses. Maximum 5 addresses",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 5
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number items per page",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100,
              "default": 10,
              "enum": [
                10,
                20,
                30,
                40,
                60,
                100
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    20,
                    30,
                    40,
                    60,
                    100
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pool_id": {
                            "type": "string",
                            "description": "Pool Address"
                          },
                          "program_id": {
                            "type": "string",
                            "description": "Program Address"
                          },
                          "token_1": {
                            "type": "string",
                            "description": "Token 1 Address"
                          },
                          "token_2": {
                            "type": "string",
                            "description": "Token 2 Address"
                          },
                          "token_account_1": {
                            "type": "string",
                            "description": "Token 1 Account Address"
                          },
                          "token_account_2": {
                            "type": "string",
                            "description": "Token 2 Account Address"
                          },
                          "total_trades_24h": {
                            "type": "number",
                            "description": "Total trades in 24h"
                          },
                          "total_trades_prev_24h": {
                            "type": "number",
                            "description": "Total trades in previous 24h"
                          },
                          "total_volume_24h": {
                            "type": "number",
                            "description": "Total volume in 24h"
                          },
                          "total_volume_prev_24h": {
                            "type": "number",
                            "description": "Total volume in previous 24h"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "pool_id": "GBmzQL7BTKwSV9Qg7h5iXQad1q61xwMSzMpdbBkCyo2p",
                        "program_id": "BSwp6bEBihVLdqJRKGgzjcGLHkcTuzmSo1TQkHepzH8p",
                        "token_1": "DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263",
                        "token_2": "So11111111111111111111111111111111111111112",
                        "token_account_1": "DBW3ZfheSXEWzqcoUCy11dX4uazNbGTar7LmBMXReJpZ",
                        "token_account_2": "An9rnaGYDHJVzvmxGEwrTTjCPszWRzkvF8dEypmhhajU",
                        "total_trades_24h": 702,
                        "total_trades_prev_24h": 769,
                        "total_volume_24h": 52681.42357718662,
                        "total_volume_prev_24h": 84649.30925076797
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/token/meta": {
      "get": {
        "tags": [
          "Token APIs"
        ],
        "operationId": "tokenMetaApi",
        "summary": "token meta",
        "description": "Get the metadata of a token",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "A token address on solana blockchain",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "The address of this token"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of this token"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The symbol of this token"
                        },
                        "icon": {
                          "type": "string",
                          "description": "The icon of this token"
                        },
                        "decimals": {
                          "type": "number",
                          "description": "The decimals of this token"
                        },
                        "price": {
                          "type": "number",
                          "description": "The price of this token in USD"
                        },
                        "volume_24h": {
                          "type": "number",
                          "description": "The token's trading volume in USD over the last 24 hours"
                        },
                        "market_cap": {
                          "type": "number",
                          "description": "The market capitalization of this token"
                        },
                        "market_cap_rank": {
                          "type": "number",
                          "description": "The market capitalization rank of this token"
                        },
                        "price_change_24h": {
                          "type": "number",
                          "description": "The price change of this token in the last 24 hours"
                        },
                        "supply": {
                          "type": "string",
                          "description": "The supply of this token"
                        },
                        "holder": {
                          "type": "number",
                          "description": "The total number of the holders of this token"
                        },
                        "creator": {
                          "type": "string",
                          "description": "The token's creator"
                        },
                        "create_tx": {
                          "type": "string",
                          "description": "The transaction that token was created"
                        },
                        "created_time": {
                          "type": "number",
                          "description": "The Unix epoch time that token was created"
                        },
                        "first_mint_tx": {
                          "type": "string",
                          "description": "The transaction that token was minted first time"
                        },
                        "first_mint_time": {
                          "type": "number",
                          "description": "The Unix epoch time that token was minted first time"
                        },
                        "metadata": {
                          "type": "object",
                          "description": "The metadata of the token"
                        },
                        "mint_authority": {
                          "type": "string",
                          "description": "The mint authority of the token"
                        },
                        "freeze_authority": {
                          "type": "string",
                          "description": "The freeze authority of the token"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": {
                      "address": "JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN",
                      "name": "Jupiter",
                      "symbol": "JUP",
                      "icon": "https://static.jup.ag/jup/icon.png",
                      "decimals": 6,
                      "holder": 794345,
                      "creator": "JUPhop9E8ZfdJ5FNHhxQt4uAih822Vs4QpqsWcewFbq",
                      "create_tx": "4h5iBF43gC88BKrjkuC8RytGtKeMzj7Z93go9tPa3GCgnjgw1sQUsV4N44LCTxDuQ9KL8Sut88Jt1EunXNqptzbZ",
                      "created_time": 1706172863,
                      "metadata": {
                        "name": "Jupiter",
                        "image": "https://static.jup.ag/jup/icon.png",
                        "symbol": "JUP",
                        "description": "JUP is the official governance token for Jupiter.",
                        "twitter": "https://twitter.com/JupiterExchange",
                        "website": "https://jup.ag"
                      },
                      "mint_authority": null,
                      "freeze_authority": null,
                      "supply": "9999978974482613",
                      "price": 0.892218,
                      "volume_24h": 404204318,
                      "market_cap": 1499341479,
                      "market_cap_rank": 88,
                      "price_change_24h": -11.87231
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/token/price": {
      "get": {
        "tags": [
          "Token APIs"
        ],
        "operationId": "tokenPriceApi",
        "summary": "token price",
        "description": "Get price of a token",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "A token address on solana blockchain",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "from_time",
            "in": "query",
            "description": "Used when you want to filter data by time. Format time: YYYYMMDD. You need to pass array into http query to filter by start and end time. Example: ?from_time=20240701&to_time=20240715",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "to_time",
            "in": "query",
            "description": "Used when you want to filter data by time. Format time: YYYYMMDD. You need to pass array into http query to filter by start and end time. Example: ?from_time=20240701&to_time=20240715",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "time",
            "in": "query",
            "deprecated": true,
            "description": "Used when you want to filter data by time. Format time: YYYYMMDD. You need to pass array into http query to filter by start and end time. Example: ?time[]=20240701&time[]=20240715",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "number",
                            "description": "Datetime in format YYYYMMDD"
                          },
                          "price": {
                            "type": "number",
                            "description": "The price of token (in USD)"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "date": 20240717,
                        "price": 0.895604
                      },
                      {
                        "date": 20240718,
                        "price": 0.962621
                      },
                      {
                        "date": 20240719,
                        "price": 0.953814
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/token/holders": {
      "get": {
        "tags": [
          "Token APIs"
        ],
        "operationId": "tokenHoldersApi",
        "summary": "token holders",
        "description": "Get the list of token holders",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "A token address on solana blockchain",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number items per page",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 40,
              "default": 10,
              "enum": [
                10,
                20,
                30,
                40
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    20,
                    30,
                    40
                  ]
                }
              ]
            }
          },
          {
            "name": "from_amount",
            "in": "query",
            "description": "Filter holders by minimum token holding amount. The number should be in string format",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 0
            }
          },
          {
            "name": "to_amount",
            "in": "query",
            "description": "Filter holders by maximum token holding amount. The number should be in string format",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "The total number of holders of this token"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "The address of the token account holding the token"
                              },
                              "amount": {
                                "type": "number",
                                "description": "The number of amount holding"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "Decimals of token"
                              },
                              "owner": {
                                "type": "string",
                                "description": "The address of the owner holding the token"
                              },
                              "rank": {
                                "type": "number",
                                "description": "The rank of the holder, sorted from the largest"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": {
                      "total": 823992,
                      "items": [
                        {
                          "address": "26ddLrqXDext6caX1gRxARePN4kzajyGiAUz9JmzmTGQ",
                          "amount": 4090152116568146,
                          "decimals": 6,
                          "owner": "61aq585V8cR2sZBeawJFt2NPqmN7zDi1sws4KLs5xHXV",
                          "rank": 1
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/token/list": {
      "get": {
        "tags": [
          "Token APIs"
        ],
        "operationId": "tokenListApi",
        "summary": "token list",
        "description": "Get the list of tokens",
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "description": "The parameter allows you to specify the field by which the returned list of tokens will be sorted",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "holder",
                "market_cap",
                "created_time"
              ]
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The parameter allows you to specify the sort order",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number items per page",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100,
              "default": 10,
              "enum": [
                10,
                20,
                30,
                40,
                60,
                100
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    20,
                    30,
                    40,
                    60,
                    100
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "Address of token"
                          },
                          "decimals": {
                            "type": "number",
                            "description": "Decimals of token"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of token"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "Symbol of token"
                          },
                          "market_cap": {
                            "type": "number",
                            "description": "Current market cap of token"
                          },
                          "price": {
                            "type": "number",
                            "description": "Current price of token"
                          },
                          "price_24h_change": {
                            "type": "number",
                            "description": "The number shows the percentage change in token price over the last 24 hours"
                          },
                          "holder": {
                            "type": "number",
                            "description": "The number of holders of the token"
                          },
                          "created_time": {
                            "type": "number",
                            "description": "The Unix epoch time that token was created"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "address": "So11111111111111111111111111111111111111112",
                        "decimals": 9,
                        "name": "Wrapped SOL",
                        "symbol": "SOL",
                        "market_cap": 120740500232,
                        "price": 254.31,
                        "price_24h_change": -0.49324,
                        "holder": 1263348,
                        "created_time": 1713016188
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: \"sort_order\" must be one of [asc, desc]"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/token/top": {
      "get": {
        "tags": [
          "Token APIs"
        ],
        "operationId": "tokenTopApi",
        "summary": "token top",
        "description": "Get the list of top tokens",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total returned tokens"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "Address of token"
                              },
                              "decimals": {
                                "type": "number",
                                "description": "Decimals of token"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of token"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Symbol of token"
                              },
                              "market_cap": {
                                "type": "number",
                                "description": "Current market cap of token"
                              },
                              "price": {
                                "type": "number",
                                "description": "Current price of token"
                              },
                              "price_24h_change": {
                                "type": "number",
                                "description": "The number shows the percentage change in token price over the last 24 hours"
                              },
                              "holder": {
                                "type": "number",
                                "description": "The number of holders of the token"
                              },
                              "created_time": {
                                "type": "number",
                                "description": "The Unix epoch time that token was created"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": {
                      "total": 1,
                      "items": [
                        {
                          "address": "So11111111111111111111111111111111111111112",
                          "decimals": 9,
                          "name": "Wrapped SOL",
                          "symbol": "SOL",
                          "market_cap": 120740500232,
                          "price": 254.31,
                          "price_24h_change": -0.49324,
                          "holder": 1263348,
                          "created_time": 1713016188
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/token/trending": {
      "get": {
        "tags": [
          "Token APIs"
        ],
        "operationId": "tokenTrendingApi",
        "summary": "token trending",
        "description": "Get the list of trending tokens",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number items should be returned",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "Address of token"
                          },
                          "decimals": {
                            "type": "number",
                            "description": "Decimals of token"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of token"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "Symbol of token"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "address": "CL4KcMhPpEeNmR7rK7RHsLSTqshoYpasSxHHhduamfe6",
                        "decimals": 9,
                        "name": "Owners Casino Online",
                        "symbol": "OCO"
                      },
                      {
                        "address": "Gouk6Q1JyrHJXymfb7KFJkBtZGDdxmGctu9T14zRpNWu",
                        "decimals": 9,
                        "name": "DopaMeme",
                        "symbol": "DOPA"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: \"limit\" must be greater than or equal to 1"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nft/news": {
      "get": {
        "tags": [
          "NFT APIs"
        ],
        "operationId": "nftNewApi",
        "summary": "new nft",
        "description": "Get the list of new NFTs",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter ('created_time')",
            "required": true,
            "schema": {
              "type": "string",
              "default": "created_time",
              "enum": [
                "created_time"
              ],
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "created_time"
                  ]
                }
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number items per page",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 36,
              "default": 12,
              "enum": [
                12,
                24,
                36
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    12,
                    24,
                    36
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "info": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "NFT Address"
                              },
                              "collection": {
                                "type": "string",
                                "description": "Collection Name"
                              },
                              "collectionId": {
                                "type": "string",
                                "description": "Collection Id"
                              },
                              "collectionKey": {
                                "type": "string",
                                "description": "Collection Key"
                              },
                              "createdTime": {
                                "type": "number",
                                "description": "Created Time"
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol"
                                  },
                                  "uri": {
                                    "type": "string",
                                    "description": "URI"
                                  },
                                  "sellerFeeBasisPoints": {
                                    "type": "number",
                                    "description": "Seller Fee Basis Points"
                                  },
                                  "creators": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "address": {
                                          "type": "string",
                                          "description": "Address"
                                        },
                                        "verified": {
                                          "type": "number",
                                          "description": "Verified"
                                        },
                                        "share": {
                                          "type": "number",
                                          "description": "Share"
                                        }
                                      }
                                    }
                                  },
                                  "id": {
                                    "type": "number",
                                    "description": "Id"
                                  }
                                }
                              },
                              "meta": {
                                "type": "object",
                                "properties": {
                                  "image": {
                                    "type": "string",
                                    "description": "Image"
                                  },
                                  "tokenId": {
                                    "type": "number",
                                    "description": "Token identity"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description"
                                  },
                                  "seller_fee_basis_points": {
                                    "type": "number",
                                    "description": "Seller Fee Basis Points"
                                  },
                                  "edition": {
                                    "type": "number",
                                    "description": "Edition"
                                  },
                                  "attributes": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "trait_type": {
                                          "type": "string",
                                          "description": "Trait Type"
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Value"
                                        }
                                      }
                                    }
                                  },
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "files": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "uri": {
                                              "type": "string",
                                              "description": "URI"
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "Type"
                                            }
                                          }
                                        }
                                      },
                                      "category": {
                                        "type": "string",
                                        "description": "Category"
                                      }
                                    }
                                  },
                                  "retried": {
                                    "type": "number",
                                    "description": "Retried"
                                  }
                                }
                              },
                              "mintTx": {
                                "type": "string",
                                "description": "Mint Tx"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "info": {
                          "address": "778ijZKhjvD4ePsBMRsnhk4qSJqikjwS6sBgAeij348Y",
                          "collection": "Time Travelling Benji",
                          "collectionId": "13d27abddf2b05c498551454c7bde30067a5ec38243ea99ea79607c73abb5e41",
                          "collectionKey": "67e49cZfNVbBncyAjR4AKCfVSFF36ApKTC1kcJhPoZjx",
                          "createdTime": 1720414991,
                          "data": {
                            "name": "Time Travelling Benji #51",
                            "symbol": "TTB",
                            "uri": "https://gateway.pinit.io/ipfs/QmTkNJ6ham4BL1Hi6L8hpkjQJsH19qapprvr8CGQDsuDKs/51.json",
                            "sellerFeeBasisPoints": 690,
                            "creators": [
                              {
                                "address": "4hmD2FWxwVfmizaJjbx32UV6hmTfWwUgTUjXbJ9KNsKy",
                                "verified": 1,
                                "share": 0
                              },
                              {
                                "address": "4xxPpyKJAFaJHAYvYavUsrF59rPMCc2kUp7r5zVifzYF",
                                "verified": 0,
                                "share": 100
                              }
                            ],
                            "id": 51
                          },
                          "meta": {
                            "image": "https://na-assets.pinit.io/4xxPpyKJAFaJHAYvYavUsrF59rPMCc2kUp7r5zVifzYF/af6a50f5-214b-4078-931a-198631f92db6/51",
                            "tokenId": 51,
                            "name": "Time Travelling Benji #51",
                            "symbol": "TTB",
                            "description": "1137 Benjis are noble travelers of both time and space on a quest to seek the « Everything Answer », the ultimate truth that underpinned the cosmos.",
                            "seller_fee_basis_points": 1000,
                            "edition": 0,
                            "attributes": [
                              {
                                "trait_type": "benji",
                                "value": "Benji"
                              },
                              {
                                "trait_type": "biome",
                                "value": "Ice Era"
                              },
                              {
                                "trait_type": "eyes",
                                "value": "Sun Glasses"
                              },
                              {
                                "trait_type": "head",
                                "value": "Top Hat"
                              },
                              {
                                "trait_type": "magic tools",
                                "value": "Rosa"
                              },
                              {
                                "trait_type": "mood",
                                "value": "ᛝ"
                              },
                              {
                                "trait_type": "mouth",
                                "value": "ᛝ"
                              },
                              {
                                "trait_type": "wings",
                                "value": "ᛝ"
                              }
                            ],
                            "properties": {
                              "files": [
                                {
                                  "uri": "https://na-assets.pinit.io/4xxPpyKJAFaJHAYvYavUsrF59rPMCc2kUp7r5zVifzYF/af6a50f5-214b-4078-931a-198631f92db6/51",
                                  "type": "image/gif"
                                }
                              ],
                              "category": "image"
                            },
                            "retried": 0
                          },
                          "mintTx": "5GPCPy3Fk6ZGqBPPhjdRRacXrktdrDJkU3edvANjc8MmdBTwXGVRpTeGvh1NkHE5FF2NGxbT95D3Bk3NaRoGL8Dm"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nft/activities": {
      "get": {
        "tags": [
          "NFT APIs"
        ],
        "operationId": "nftActivitiesApi",
        "summary": "nft activities",
        "description": "Get NFT activities",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "From",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "To",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Filter by list source addresses. Maximum 5 addresses",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 5
            }
          },
          {
            "name": "activity_type",
            "in": "query",
            "description": "Type of defiactivity data",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 30,
              "enum": [
                "ACTIVITY_NFT_SOLD",
                "ACTIVITY_NFT_LISTING",
                "ACTIVITY_NFT_BIDDING",
                "ACTIVITY_NFT_CANCEL_BID",
                "ACTIVITY_NFT_CANCEL_LIST",
                "ACTIVITY_NFT_REJECT_BID",
                "ACTIVITY_NFT_UPDATE_PRICE",
                "ACTIVITY_NFT_LIST_AUCTION"
              ]
            }
          },
          {
            "name": "from_time",
            "in": "query",
            "description": "Filter by time range (Unix timestamp in seconds). Example: ?from_time=1720153259&to_time=1720153276",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "to_time",
            "in": "query",
            "description": "Filter by time range (Unix timestamp in seconds). Example: ?from_time=1720153259&to_time=1720153276",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Filter activities data by token address",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "collection",
            "in": "query",
            "description": "collection",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "currency_token",
            "in": "query",
            "description": "currency_token",
            "required": false,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "Filter transfer data by by amount. But you need to pass token address in field currency_token first because price filter will be belong to one currency token address. Ex: Filter price from 1 to 2 SOL ?price[]=1&price[]=2&currency_token=So11111111111111111111111111111111111111112",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number items per page",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100,
              "default": 10,
              "enum": [
                10,
                20,
                30,
                40,
                60,
                100
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    20,
                    30,
                    40,
                    60,
                    100
                  ]
                }
              ]
            }
          },
          {
            "name": "block_time",
            "in": "query",
            "description": "Used when you want to filter data by block time. Format time: UnixTime in seconds. You need to pass array into http query to filter by start and stop block_time. Example: ?block_time[]=1720153259&block_time[]=1720153276",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_id": {
                            "type": "number",
                            "description": "Slot Number of activity"
                          },
                          "trans_id": {
                            "type": "string",
                            "description": "Transaction Hash or Signature for activity"
                          },
                          "block_time": {
                            "type": "number",
                            "description": "UnixTime of the slot"
                          },
                          "time": {
                            "type": "string",
                            "description": "Time of the slot"
                          },
                          "activity_type": {
                            "type": "string",
                            "description": "Type of transfer.",
                            "enum": [
                              "ACTIVITY_NFT_SOLD",
                              "ACTIVITY_NFT_LISTING",
                              "ACTIVITY_NFT_BIDDING",
                              "ACTIVITY_NFT_CANCEL_BID",
                              "ACTIVITY_NFT_CANCEL_LIST",
                              "ACTIVITY_NFT_REJECT_BID",
                              "ACTIVITY_NFT_UPDATE_PRICE",
                              "ACTIVITY_NFT_LIST_AUCTION"
                            ]
                          },
                          "from_address": {
                            "type": "string",
                            "description": "Transfer from an address"
                          },
                          "to_address": {
                            "type": "string",
                            "description": "Transfer to an address"
                          },
                          "token_address": {
                            "type": "string",
                            "description": "Token address"
                          },
                          "marketplace_address": {
                            "type": "string",
                            "description": "Marketplace address"
                          },
                          "collection_address": {
                            "type": "string",
                            "description": "Collection address"
                          },
                          "amount": {
                            "type": "number",
                            "description": "NFT Amount"
                          },
                          "price": {
                            "type": "number",
                            "description": "Price"
                          },
                          "currency_token": {
                            "type": "string",
                            "description": "Currency token"
                          },
                          "currency_decimals": {
                            "type": "number",
                            "description": "Currency token decimals"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "block_id": 276338494,
                        "trans_id": "2BFpcL7MYfuAPGwXWX5YWghHJtJHpq5A62pZT5qfQrsQSU2ja5okLiWiSHDUSTzFxsgDcox6TdbjkvXjncgFXZwP",
                        "block_time": 1720420818,
                        "time": "2024-07-08T06:40:18.000Z",
                        "activity_type": "ACTIVITY_NFT_UPDATE_PRICE",
                        "from_address": "sorpyYr8gyreU9s8fPxxu3Erm7XZz4JE7ynTRMFNKTg",
                        "to_address": "",
                        "token_address": "2Y8WGuu5FuT2xAL92UPUCVbBTHt1fVrNcL6tbpnCn7zf",
                        "marketplace_address": "TSWAPaqyCSx2KABk68Shruf4rp7CxcNi8hAsbdwmHbN",
                        "collection_address": "9eccb05f1b5fc4ca5ad9f54dbbc4b481ec2c8016493c76be94cfbd060dbcefc9",
                        "amount": 1,
                        "price": 1316000000,
                        "currency_token": "So11111111111111111111111111111111111111112",
                        "currency_decimals": 9
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nft/collection/lists": {
      "get": {
        "tags": [
          "NFT APIs"
        ],
        "operationId": "nftCollectionListApi",
        "summary": "nft collection lists",
        "description": "Get the list of NFT collections",
        "parameters": [
          {
            "name": "range",
            "in": "query",
            "description": "Days range",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "enum": [
                1,
                7,
                30
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    1,
                    7,
                    30
                  ]
                }
              ]
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The parameter allows you to specify the sort order",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ],
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ]
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The parameter allows you to specify the field by which the returned list will be sorted",
            "required": false,
            "schema": {
              "type": "string",
              "default": "volumes",
              "enum": [
                "items",
                "floor_price",
                "volumes"
              ],
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "items",
                    "floor_price",
                    "volumes"
                  ]
                }
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number items per page",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 40,
              "default": 10,
              "enum": [
                10,
                18,
                20,
                30,
                40
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    18,
                    20,
                    30,
                    40
                  ]
                }
              ]
            }
          },
          {
            "name": "collection",
            "in": "query",
            "description": "Collection ID, if not provided, will return all collections",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "collection_id": {
                            "type": "string",
                            "description": "Collection Address"
                          },
                          "name": {
                            "type": "string",
                            "description": "Collection Name"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "Collection Symbol"
                          },
                          "floor_price": {
                            "type": "number",
                            "description": "Floor Price"
                          },
                          "items": {
                            "type": "number",
                            "description": "Items"
                          },
                          "marketplaces": {
                            "type": "array",
                            "description": "Marketplaces",
                            "items": {
                              "type": "string"
                            }
                          },
                          "volumes": {
                            "type": "number",
                            "description": "Volumes"
                          },
                          "total_vol_prev_24h": {
                            "type": "number",
                            "description": "Total Volume Previous 24h"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "collection_id": "fc8dd31116b25e6690d83f6fb102e67ac6a9364dc2b96285d636aed462c4a983",
                        "name": "SMB Gen2",
                        "symbol": "SMB",
                        "floor_price": 32.359,
                        "items": 5069,
                        "marketplaces": [
                          "M2mx93ekt1fmXSVkTrUL9xVFHkmME8HTUi5Cyc5aF7K",
                          "CJsLwbP1iu5DuUikHEJnLfANgKy6stB2uFgvBBHoyxwz",
                          "mmm3XBJg5gk8XJxEKBvdgptZz6SgK4tXvn36sodowMc",
                          "TSWAPaqyCSx2KABk68Shruf4rp7CxcNi8hAsbdwmHbN",
                          "hadeK9DLv9eA7ya5KCTqSvSvRZeJC3JgD5a9Y3CNbvu"
                        ],
                        "volumes": 4106.231117706,
                        "total_vol_prev_24h": 1295.469643436
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nft/collection/items": {
      "get": {
        "tags": [
          "NFT APIs"
        ],
        "operationId": "nftCollectionItemApi",
        "summary": "nft collection items",
        "description": "Get the list of items of a NFT collection",
        "parameters": [
          {
            "name": "collection",
            "in": "query",
            "description": "Collection ID",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The parameter allows you to specify the field by which the returned list will be sorted",
            "required": false,
            "schema": {
              "type": "string",
              "default": "last_trade",
              "enum": [
                "last_trade",
                "listing_price"
              ],
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "last_trade",
                    "listing_price"
                  ]
                }
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number items per page",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 36,
              "default": 12,
              "enum": [
                12,
                24,
                36
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    12,
                    24,
                    36
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tradeInfo": {
                            "type": "object",
                            "properties": {
                              "trade_time": {
                                "type": "number",
                                "description": "Trade Time"
                              },
                              "signature": {
                                "type": "string",
                                "description": "Signature"
                              },
                              "market_id": {
                                "type": "string",
                                "description": "Market ID"
                              },
                              "type": {
                                "type": "string",
                                "description": "Type"
                              },
                              "price": {
                                "type": "string",
                                "description": "Price"
                              },
                              "currency_token": {
                                "type": "string",
                                "description": "Currency token"
                              },
                              "currency_decimals": {
                                "type": "number",
                                "description": "Currency Decimals"
                              },
                              "seller": {
                                "type": "string",
                                "description": "Seller"
                              },
                              "buyer": {
                                "type": "string",
                                "description": "Buyer"
                              }
                            }
                          },
                          "info": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "NFT Address"
                              },
                              "collection": {
                                "type": "string",
                                "description": "Collection Name"
                              },
                              "collectionId": {
                                "type": "string",
                                "description": "Collection Id"
                              },
                              "collectionKey": {
                                "type": "string",
                                "description": "Collection Key"
                              },
                              "createdTime": {
                                "type": "number",
                                "description": "Created Time"
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol"
                                  },
                                  "uri": {
                                    "type": "string",
                                    "description": "URI"
                                  },
                                  "sellerFeeBasisPoints": {
                                    "type": "number",
                                    "description": "Seller Fee Basis Points"
                                  },
                                  "creators": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "address": {
                                          "type": "string",
                                          "description": "Address"
                                        },
                                        "verified": {
                                          "type": "number",
                                          "description": "Verified"
                                        },
                                        "share": {
                                          "type": "number",
                                          "description": "Share"
                                        }
                                      }
                                    }
                                  },
                                  "id": {
                                    "type": "number",
                                    "description": "Id"
                                  }
                                }
                              },
                              "meta": {
                                "type": "object",
                                "properties": {
                                  "image": {
                                    "type": "string",
                                    "description": "Image"
                                  },
                                  "tokenId": {
                                    "type": "number",
                                    "description": "Token identity"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "Symbol"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description"
                                  },
                                  "seller_fee_basis_points": {
                                    "type": "number",
                                    "description": "Seller Fee Basis Points"
                                  },
                                  "edition": {
                                    "type": "number",
                                    "description": "Edition"
                                  },
                                  "attributes": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "trait_type": {
                                          "type": "string",
                                          "description": "Trait Type"
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Value"
                                        }
                                      }
                                    }
                                  },
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "files": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "uri": {
                                              "type": "string",
                                              "description": "URI"
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "Type"
                                            }
                                          }
                                        }
                                      },
                                      "category": {
                                        "type": "string",
                                        "description": "Category"
                                      }
                                    }
                                  },
                                  "retried": {
                                    "type": "number",
                                    "description": "Retried"
                                  }
                                }
                              },
                              "mintTx": {
                                "type": "string",
                                "description": "Mint Tx"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "tradeInfo": {
                          "trade_time": 1720417931,
                          "signature": "51BSKLGXwnrgjNMsENRyMSVxRTkzdsorFiLXBL722jR5CMWvbqVHPb3mjyj8yq84GNyB7BpdvFVBDXAp7BQKT7rB",
                          "market_id": "M2mx93ekt1fmXSVkTrUL9xVFHkmME8HTUi5Cyc5aF7K",
                          "type": "Buy",
                          "price": "33000000000",
                          "currency_token": "So11111111111111111111111111111111111111112",
                          "currency_decimals": 9,
                          "seller": "D5i8StjMcLzKRteBDycErrhcUz8n4qdggdYKmeXnP5Hn",
                          "buyer": "5VPLqgeK9DijCy46NM1Ma5kxNdFuxCyvT9e1yqAhXG1k"
                        },
                        "info": {
                          "address": "BPQi6NrD6M9s4TaUYQtX66uPWy1A5C39o619MZDGxsjg",
                          "token_name": "SMB #2960",
                          "token_symbol": "SMB",
                          "collection_id": "fc8dd31116b25e6690d83f6fb102e67ac6a9364dc2b96285d636aed462c4a983",
                          "data": {
                            "name": "SMB #2960",
                            "symbol": "SMB",
                            "uri": "https://arweave.net/qftyFbDgZPWj-Ah6Uqhfkb-bxxBhXkBsA1j78-ar7Ds",
                            "sellerFeeBasisPoints": 0,
                            "creators": [
                              {
                                "address": "mdaoxg4DVGptU4WSpzGyVpK3zqsgn7Qzx5XNgWTcEA2",
                                "verified": 1,
                                "share": 0
                              },
                              {
                                "address": "HAryckvjyViFQEmhmMoCtqqBMJnpXEYViamyDhZUJfnG",
                                "verified": 0,
                                "share": 100
                              },
                              {
                                "address": "9uBX3ASjxWvNBAD1xjbVaKA74mWGZys3RGSF7DdeDD3F",
                                "verified": 0,
                                "share": 0
                              }
                            ],
                            "id": 2960
                          },
                          "meta": {
                            "name": "SMB #2960",
                            "symbol": "SMB",
                            "description": "SMB is a collection of 5000 randomly generated 24x24 pixels NFTs on the Solana Blockchain. Each SolanaMonkey is unique and comes with different type and attributes varying in rarity.",
                            "seller_fee_basis_points": 600,
                            "image": "https://arweave.net/IzSOlri0HLCsYc1NoDvlzuCuyk_NDC1aO6BwktmJB68",
                            "external_url": "https://solanamonkey.business/",
                            "collection": {
                              "name": "SMB Gen2",
                              "family": "SMB"
                            },
                            "attributes": [
                              {
                                "trait_type": "Attributes Count",
                                "value": 3
                              },
                              {
                                "trait_type": "Type",
                                "value": "Purple"
                              },
                              {
                                "trait_type": "Clothes",
                                "value": "Purple Shirt"
                              },
                              {
                                "trait_type": "Ears",
                                "value": "Silver Earring"
                              },
                              {
                                "trait_type": "Mouth",
                                "value": "None"
                              },
                              {
                                "trait_type": "Eyes",
                                "value": "None"
                              },
                              {
                                "trait_type": "Hat",
                                "value": "Protagonist White Hat"
                              }
                            ],
                            "properties": {
                              "files": [
                                {
                                  "uri": "https://arweave.net/IzSOlri0HLCsYc1NoDvlzuCuyk_NDC1aO6BwktmJB68",
                                  "type": "image/png"
                                },
                                {
                                  "uri": "https://cdn.solanamonkey.business/gen2/2960.png",
                                  "type": "image/png",
                                  "cdn": true
                                }
                              ],
                              "category": "image",
                              "creators": [
                                {
                                  "address": "9uBX3ASjxWvNBAD1xjbVaKA74mWGZys3RGSF7DdeDD3F",
                                  "verified": true,
                                  "share": 100
                                }
                              ]
                            }
                          },
                          "mint_tx": "5rivnBGERL4VdZXf4VwiiRYJQpEi1Qu5bWj1wAibBNf8hVvmKFhqUAXjSVLCED2rycHMfhmHTfnQJoy4Khfz7ybt",
                          "created_time": 1659678853
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/transaction/last": {
      "get": {
        "tags": [
          "Transaction APIs"
        ],
        "operationId": "transactionLastApi",
        "summary": "transaction last",
        "description": "Get the list of the latest transactions",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of transactions should be returned",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100,
              "default": 10,
              "enum": [
                10,
                20,
                30,
                40,
                60,
                100
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    20,
                    30,
                    40,
                    60,
                    100
                  ]
                }
              ]
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filter parameter for excluding vote transactions",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "exceptVote",
                "all"
              ],
              "default": "exceptVote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "slot": {
                            "type": "number",
                            "description": "Slot number of the transaction"
                          },
                          "fee": {
                            "type": "number",
                            "description": "The fee of the transaction"
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the transaction: Success or Fail"
                          },
                          "signer": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The signers of the transaction"
                          },
                          "block_time": {
                            "type": "number",
                            "description": "The Unix time of the slot"
                          },
                          "tx_hash": {
                            "type": "string",
                            "description": "Transaction signature"
                          },
                          "parsed_instructions": {
                            "type": "array",
                            "description": "The list of transaction instructions",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The type of the instruction"
                                },
                                "program": {
                                  "type": "string",
                                  "description": "The name of the program"
                                },
                                "program_id": {
                                  "type": "string",
                                  "description": "The address of the program"
                                }
                              }
                            }
                          },
                          "program_ids": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The list of addresses of programs involved in the transaction"
                          },
                          "time": {
                            "type": "string",
                            "description": "The time of the slot"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "slot": 282493339,
                        "fee": 5400,
                        "status": "Success",
                        "signer": [
                          "28FBsXoAH8BPy8RT7RZtb8SMoJUVCPWVtZMeskxe6sPg"
                        ],
                        "block_time": 1723194084,
                        "tx_hash": "61zYZzrAR5HAdXyg41QpjoaZxL79aunWUhfxBtcSNGC6s11eHyTKCb3au6wNad1JddMAbATKTgoWPnooqeebc7KV",
                        "parsed_instructions": [
                          {
                            "type": "addProduct",
                            "program": "Pyth",
                            "program_id": "FsJ3A3u2vn5cTVofAjvy6y5kwABJAqYWpe4975bi2epH"
                          },
                          {
                            "type": "addProduct",
                            "program": "Pyth",
                            "program_id": "FsJ3A3u2vn5cTVofAjvy6y5kwABJAqYWpe4975bi2epH"
                          },
                          {
                            "type": "addProduct",
                            "program": "Pyth",
                            "program_id": "FsJ3A3u2vn5cTVofAjvy6y5kwABJAqYWpe4975bi2epH"
                          },
                          {
                            "type": "addProduct",
                            "program": "Pyth",
                            "program_id": "FsJ3A3u2vn5cTVofAjvy6y5kwABJAqYWpe4975bi2epH"
                          },
                          {
                            "type": "addProduct",
                            "program": "Pyth",
                            "program_id": "FsJ3A3u2vn5cTVofAjvy6y5kwABJAqYWpe4975bi2epH"
                          },
                          {
                            "type": "addProduct",
                            "program": "Pyth",
                            "program_id": "FsJ3A3u2vn5cTVofAjvy6y5kwABJAqYWpe4975bi2epH"
                          },
                          {
                            "type": "addProduct",
                            "program": "Pyth",
                            "program_id": "FsJ3A3u2vn5cTVofAjvy6y5kwABJAqYWpe4975bi2epH"
                          },
                          {
                            "type": "addProduct",
                            "program": "Pyth",
                            "program_id": "FsJ3A3u2vn5cTVofAjvy6y5kwABJAqYWpe4975bi2epH"
                          },
                          {
                            "type": "addProduct",
                            "program": "Pyth",
                            "program_id": "FsJ3A3u2vn5cTVofAjvy6y5kwABJAqYWpe4975bi2epH"
                          },
                          {
                            "type": "addProduct",
                            "program": "Pyth",
                            "program_id": "FsJ3A3u2vn5cTVofAjvy6y5kwABJAqYWpe4975bi2epH"
                          }
                        ],
                        "program_ids": [
                          "FsJ3A3u2vn5cTVofAjvy6y5kwABJAqYWpe4975bi2epH",
                          "ComputeBudget111111111111111111111111111111"
                        ],
                        "time": "2024-08-09T09:01:24.000Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: tx is not allowed"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/transaction/detail": {
      "get": {
        "tags": [
          "Transaction APIs"
        ],
        "operationId": "transactionApi",
        "summary": "transaction detail",
        "description": "Get the detail of a transaction. Return transaction data after parsed by Solscan Parser. Data will include very helpful data such as: token and sol balance changes, IDL data, defi or transfer activities of each instructions",
        "parameters": [
          {
            "name": "tx",
            "in": "query",
            "description": "Transaction Address",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "tx_hash": {
                          "type": "string",
                          "description": "Signature of transaction"
                        },
                        "block_id": {
                          "type": "number",
                          "description": "Slot number"
                        },
                        "block_time": {
                          "type": "number",
                          "description": "UnixTime of the slot"
                        },
                        "fee": {
                          "type": "number",
                          "description": "Fee of transaction"
                        },
                        "reward": {
                          "type": "array",
                          "description": "Reward info of this transaction"
                        },
                        "sol_bal_change": {
                          "type": "array",
                          "description": "List Navtive Sol balance changes for accounts in this transaction"
                        },
                        "token_bal_change": {
                          "type": "array",
                          "description": "List SPL Token balance changes for accounts in this transaction"
                        },
                        "programs_involved": {
                          "type": "array",
                          "description": "List of program addresses participating in the transaction"
                        },
                        "parsed_instructions": {
                          "type": "array",
                          "description": "List of instructions and inner instructions"
                        },
                        "signer": {
                          "type": "array",
                          "description": "List of signers in this transaction"
                        },
                        "status": {
                          "type": "number",
                          "description": "Status of transaction, 1 for success and 0 for error"
                        },
                        "compute_units_consumed": {
                          "type": "number",
                          "description": "Number of compute units consumed by the transaction"
                        },
                        "address_table_lookup": {
                          "type": "array",
                          "description": "Transaction addresses loaded from address lookup tables"
                        },
                        "log_message": {
                          "type": "array",
                          "description": "array of string log messages or null if log message recording was not enabled during this transaction"
                        },
                        "priority_fee": {
                          "type": "number",
                          "description": "Number of priority fee"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": {
                      "block_id": 319312375,
                      "fee": 6000,
                      "reward": [],
                      "sol_bal_change": [
                        {
                          "address": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                          "pre_balance": "61773386454",
                          "post_balance": "61773388751",
                          "change_amount": "2297"
                        },
                        {
                          "address": "4DxxfgsFd1STeLGVckL5ghvpuGMJcN7FyxwPtr758kNt",
                          "pre_balance": "1825496640",
                          "post_balance": "1825496640",
                          "change_amount": "0"
                        },
                        {
                          "address": "4Xo1YUNAmPjqnbJfqDfraCrqALyTYgVDQk92gk2hoS55",
                          "pre_balance": "97348932661",
                          "post_balance": "97348924364",
                          "change_amount": "-8297"
                        },
                        {
                          "address": "56AFVxzUaRLNSfpLWtDXeLkb8KF4t1XFm5bxjijRdKFG",
                          "pre_balance": "2039280",
                          "post_balance": "2039280",
                          "change_amount": "0"
                        },
                        {
                          "address": "5Kuh8qqF3AtkWdRKFRMfD9NdkbVKXndMNimz2EsaRMzb",
                          "pre_balance": "23357760",
                          "post_balance": "23357760",
                          "change_amount": "0"
                        },
                        {
                          "address": "7GJmaSprKPACHwLMDKCW7ujfQQxCRiMzmWccjhtWyLVr",
                          "pre_balance": "457104960",
                          "post_balance": "457104960",
                          "change_amount": "0"
                        },
                        {
                          "address": "7YqhdwrG64W4vrkojpjGspMHaduqpBXHnniweavEJcZV",
                          "pre_balance": "2039280",
                          "post_balance": "2039280",
                          "change_amount": "0"
                        },
                        {
                          "address": "94V2bz4UX1VTUx4U9D6wFT6BWbMjHJg1pBBNeMWYUdWM",
                          "pre_balance": "16258560",
                          "post_balance": "16258560",
                          "change_amount": "0"
                        },
                        {
                          "address": "AAGnoCdWmLiyZMNUYCKxXRyxkWarrq5rJZmJPzpzUmtD",
                          "pre_balance": "3591360",
                          "post_balance": "3591360",
                          "change_amount": "0"
                        },
                        {
                          "address": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                          "pre_balance": "0",
                          "post_balance": "0",
                          "change_amount": "0"
                        },
                        {
                          "address": "DWuiywtkWWskikCzb1QcpxfJzLBApJ1Q44EmseoHxJgb",
                          "pre_balance": "457104960",
                          "post_balance": "457104960",
                          "change_amount": "0"
                        },
                        {
                          "address": "HEvzmYSVzYQNp5daQaEWw9Gu3NdvCSrwZ2r3BJQNLoYz",
                          "pre_balance": "6124800",
                          "post_balance": "6124800",
                          "change_amount": "0"
                        },
                        {
                          "address": "HhMMcLwsRqZKsxF6YYxPSYCaixNL8JMvpLcTE48ecc2b",
                          "pre_balance": "2039280",
                          "post_balance": "2039280",
                          "change_amount": "0"
                        },
                        {
                          "address": "J2XMTH3L54WYEmx8QEDuSCLo96ojwe17XaJArgWsm5ja",
                          "pre_balance": "2039280",
                          "post_balance": "2039280",
                          "change_amount": "0"
                        },
                        {
                          "address": "11111111111111111111111111111111",
                          "pre_balance": "1",
                          "post_balance": "1",
                          "change_amount": "0"
                        },
                        {
                          "address": "ComputeBudget111111111111111111111111111111",
                          "pre_balance": "1",
                          "post_balance": "1",
                          "change_amount": "0"
                        },
                        {
                          "address": "So11111111111111111111111111111111111111112",
                          "pre_balance": "945279451726",
                          "post_balance": "945279451726",
                          "change_amount": "0"
                        },
                        {
                          "address": "SysvarRent111111111111111111111111111111111",
                          "pre_balance": "1009200",
                          "post_balance": "1009200",
                          "change_amount": "0"
                        },
                        {
                          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                          "pre_balance": "934087680",
                          "post_balance": "934087680",
                          "change_amount": "0"
                        },
                        {
                          "address": "srmqPvymJeFKQ4zGQed1GFppgkRHL9kaELCbyksJtPX",
                          "pre_balance": "1141440",
                          "post_balance": "1141440",
                          "change_amount": "0"
                        },
                        {
                          "address": "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1",
                          "pre_balance": "15281224065",
                          "post_balance": "15281224065",
                          "change_amount": "0"
                        },
                        {
                          "address": "675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",
                          "pre_balance": "1141440",
                          "post_balance": "1141440",
                          "change_amount": "0"
                        },
                        {
                          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
                          "pre_balance": "731913600",
                          "post_balance": "731913600",
                          "change_amount": "0"
                        },
                        {
                          "address": "AzXP8bpiWUzk8JQjzi6Afx9ZEmg6nSwAK6LrHs6HG4FN",
                          "pre_balance": "0",
                          "post_balance": "0",
                          "change_amount": "0"
                        }
                      ],
                      "token_bal_change": [
                        {
                          "address": "4Xo1YUNAmPjqnbJfqDfraCrqALyTYgVDQk92gk2hoS55",
                          "change_type": "dec",
                          "change_amount": "-8297",
                          "decimals": 9,
                          "post_balance": "97346885084",
                          "pre_balance": "97346893381",
                          "token_address": "So11111111111111111111111111111111111111112",
                          "owner": "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1",
                          "post_owner": "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1",
                          "pre_owner": "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1"
                        },
                        {
                          "address": "56AFVxzUaRLNSfpLWtDXeLkb8KF4t1XFm5bxjijRdKFG",
                          "change_type": "dec",
                          "change_amount": "0",
                          "decimals": 6,
                          "post_balance": "0",
                          "pre_balance": "0",
                          "token_address": "CYsQw9wRvdBTj82VYvP9KWuybPTF927RJAhfqCvnpump",
                          "owner": "AzXP8bpiWUzk8JQjzi6Afx9ZEmg6nSwAK6LrHs6HG4FN",
                          "post_owner": "AzXP8bpiWUzk8JQjzi6Afx9ZEmg6nSwAK6LrHs6HG4FN",
                          "pre_owner": "AzXP8bpiWUzk8JQjzi6Afx9ZEmg6nSwAK6LrHs6HG4FN"
                        },
                        {
                          "address": "7YqhdwrG64W4vrkojpjGspMHaduqpBXHnniweavEJcZV",
                          "change_type": "dec",
                          "change_amount": "-15872345",
                          "decimals": 6,
                          "post_balance": "9381892385509",
                          "pre_balance": "9381908257854",
                          "token_address": "CYsQw9wRvdBTj82VYvP9KWuybPTF927RJAhfqCvnpump",
                          "owner": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                          "post_owner": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                          "pre_owner": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx"
                        },
                        {
                          "address": "HhMMcLwsRqZKsxF6YYxPSYCaixNL8JMvpLcTE48ecc2b",
                          "change_type": "dec",
                          "change_amount": "0",
                          "decimals": 9,
                          "post_balance": "0",
                          "pre_balance": "0",
                          "token_address": "So11111111111111111111111111111111111111112",
                          "owner": "AzXP8bpiWUzk8JQjzi6Afx9ZEmg6nSwAK6LrHs6HG4FN",
                          "post_owner": "AzXP8bpiWUzk8JQjzi6Afx9ZEmg6nSwAK6LrHs6HG4FN",
                          "pre_owner": "AzXP8bpiWUzk8JQjzi6Afx9ZEmg6nSwAK6LrHs6HG4FN"
                        },
                        {
                          "address": "J2XMTH3L54WYEmx8QEDuSCLo96ojwe17XaJArgWsm5ja",
                          "change_type": "inc",
                          "change_amount": "15872345",
                          "decimals": 6,
                          "post_balance": "185748146137817",
                          "pre_balance": "185748130265472",
                          "token_address": "CYsQw9wRvdBTj82VYvP9KWuybPTF927RJAhfqCvnpump",
                          "owner": "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1",
                          "post_owner": "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1",
                          "pre_owner": "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1"
                        }
                      ],
                      "tokens_involved": [
                        "So11111111111111111111111111111111111111112",
                        "CYsQw9wRvdBTj82VYvP9KWuybPTF927RJAhfqCvnpump"
                      ],
                      "parsed_instructions": [
                        {
                          "ins_index": 0,
                          "parsed_type": "SetComputeUnitLimit",
                          "type": "setComputeUnitLimit",
                          "program_id": "ComputeBudget111111111111111111111111111111",
                          "program": "ComputeBudget",
                          "outer_program_id": null,
                          "outer_ins_index": -1,
                          "data_raw": "JC3gyu",
                          "accounts": [],
                          "activities": [
                            {
                              "name": "ComputeBudget",
                              "activity_type": "compute_unit_limit",
                              "program_id": "ComputeBudget111111111111111111111111111111",
                              "data": {
                                "compute_unit_limit": "100000"
                              },
                              "ins_index": 0,
                              "outer_ins_index": -1,
                              "outer_program_id": null,
                              "program_invoke_level": 1,
                              "inst_type": "SetComputeUnitLimit"
                            }
                          ],
                          "transfers": [],
                          "program_invoke_level": 1,
                          "idl_data": {
                            "input_args": {
                              "discriminator": {
                                "type": "u8",
                                "data": 2
                              },
                              "units": {
                                "type": "u32",
                                "data": 100000
                              }
                            }
                          }
                        },
                        {
                          "ins_index": 1,
                          "parsed_type": "SetComputeUnitPrice",
                          "type": "setComputeUnitPrice",
                          "program_id": "ComputeBudget111111111111111111111111111111",
                          "program": "ComputeBudget",
                          "outer_program_id": null,
                          "outer_ins_index": -1,
                          "data_raw": "3GAG5eogvTjV",
                          "accounts": [],
                          "activities": [
                            {
                              "name": "ComputeBudget",
                              "activity_type": "compute_unit_price",
                              "program_id": "ComputeBudget111111111111111111111111111111",
                              "data": {
                                "compute_unit_price_by_microlamport": "10000"
                              },
                              "ins_index": 1,
                              "outer_ins_index": -1,
                              "outer_program_id": null,
                              "program_invoke_level": 1,
                              "inst_type": "SetComputeUnitPrice"
                            }
                          ],
                          "transfers": [],
                          "program_invoke_level": 1,
                          "idl_data": {
                            "input_args": {
                              "discriminator": {
                                "type": "u8",
                                "data": 3
                              },
                              "microLamports": {
                                "type": "u64",
                                "data": 10000
                              }
                            }
                          }
                        },
                        {
                          "ins_index": 2,
                          "parsed_type": "create",
                          "type": "create",
                          "program_id": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
                          "program": "spl-associated-token-account",
                          "outer_program_id": null,
                          "outer_ins_index": -1,
                          "data_raw": {
                            "info": {
                              "account": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                              "mint": "So11111111111111111111111111111111111111112",
                              "source": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                              "systemProgram": "11111111111111111111111111111111",
                              "tokenProgram": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                              "wallet": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx"
                            },
                            "type": "create"
                          },
                          "accounts": [],
                          "activities": [],
                          "transfers": [
                            {
                              "source_owner": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                              "source": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                              "destination": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                              "destination_owner": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                              "transfer_type": "spl_createaccount",
                              "token_address": "So11111111111111111111111111111111111111111",
                              "decimals": 9,
                              "amount_str": "2039280",
                              "amount": 2039280,
                              "program_id": "11111111111111111111111111111111",
                              "outer_program_id": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
                              "ins_index": 1,
                              "outer_ins_index": 2,
                              "event": "createAccount",
                              "fee": {}
                            }
                          ],
                          "inner_instructions": [
                            {
                              "ins_index": 0,
                              "parsed_type": "getAccountDataSize",
                              "type": "getAccountDataSize",
                              "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                              "program": "spl-token",
                              "outer_program_id": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
                              "outer_ins_index": 2,
                              "data_raw": {
                                "info": {
                                  "extensionTypes": [
                                    "immutableOwner"
                                  ],
                                  "mint": "So11111111111111111111111111111111111111112"
                                },
                                "type": "getAccountDataSize"
                              },
                              "accounts": [],
                              "activities": [],
                              "transfers": [],
                              "program_invoke_level": 2
                            },
                            {
                              "ins_index": 1,
                              "parsed_type": "createAccount",
                              "type": "createAccount",
                              "program_id": "11111111111111111111111111111111",
                              "program": "system",
                              "outer_program_id": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
                              "outer_ins_index": 2,
                              "data_raw": {
                                "info": {
                                  "lamports": 2039280,
                                  "newAccount": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                                  "owner": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                                  "source": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                                  "space": 165
                                },
                                "type": "createAccount"
                              },
                              "accounts": [],
                              "activities": [
                                {
                                  "name": "createAccount",
                                  "activity_type": "spl_createaccount",
                                  "data": {
                                    "new_account": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                                    "source": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                                    "transfer_amount": 2039280,
                                    "transfer_amount_str": "2039280",
                                    "program_owner": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                                    "space": 165,
                                    "common_type": "create-account"
                                  },
                                  "program_id": "11111111111111111111111111111111",
                                  "outer_program_id": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
                                  "outer_ins_index": 2,
                                  "ins_index": 1
                                }
                              ],
                              "transfers": [
                                {
                                  "source_owner": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                                  "source": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                                  "destination": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                                  "destination_owner": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                                  "transfer_type": "spl_createaccount",
                                  "token_address": "So11111111111111111111111111111111111111111",
                                  "decimals": 9,
                                  "amount_str": "2039280",
                                  "amount": 2039280,
                                  "program_id": "11111111111111111111111111111111",
                                  "outer_program_id": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
                                  "ins_index": 1,
                                  "outer_ins_index": 2,
                                  "event": "createAccount",
                                  "fee": {}
                                }
                              ],
                              "program_invoke_level": 2
                            },
                            {
                              "ins_index": 2,
                              "parsed_type": "initializeImmutableOwner",
                              "type": "initializeImmutableOwner",
                              "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                              "program": "spl-token",
                              "outer_program_id": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
                              "outer_ins_index": 2,
                              "data_raw": {
                                "info": {
                                  "account": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv"
                                },
                                "type": "initializeImmutableOwner"
                              },
                              "accounts": [],
                              "activities": [],
                              "transfers": [],
                              "program_invoke_level": 2
                            },
                            {
                              "ins_index": 3,
                              "parsed_type": "initializeAccount3",
                              "type": "initializeAccount3",
                              "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                              "program": "spl-token",
                              "outer_program_id": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
                              "outer_ins_index": 2,
                              "data_raw": {
                                "info": {
                                  "account": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                                  "mint": "So11111111111111111111111111111111111111112",
                                  "owner": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx"
                                },
                                "type": "initializeAccount3"
                              },
                              "accounts": [],
                              "activities": [
                                {
                                  "name": "initializeAccount3",
                                  "activity_type": "spl_common",
                                  "data": {
                                    "token_address": "So11111111111111111111111111111111111111112",
                                    "init_account": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                                    "owner": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx"
                                  },
                                  "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                                  "outer_program_id": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
                                  "outer_ins_index": 2,
                                  "ins_index": 3
                                }
                              ],
                              "transfers": [],
                              "program_invoke_level": 2
                            }
                          ],
                          "program_invoke_level": 1
                        },
                        {
                          "ins_index": 3,
                          "parsed_type": "raydium:swap",
                          "type": "swapBaseIn",
                          "program_id": "675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",
                          "program": "raydium_amm",
                          "outer_program_id": null,
                          "outer_ins_index": -1,
                          "data_raw": "66XGnVuUmgYa9XCFyVfMe4X",
                          "accounts": [
                            "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                            "HEvzmYSVzYQNp5daQaEWw9Gu3NdvCSrwZ2r3BJQNLoYz",
                            "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1",
                            "5Kuh8qqF3AtkWdRKFRMfD9NdkbVKXndMNimz2EsaRMzb",
                            "94V2bz4UX1VTUx4U9D6wFT6BWbMjHJg1pBBNeMWYUdWM",
                            "4Xo1YUNAmPjqnbJfqDfraCrqALyTYgVDQk92gk2hoS55",
                            "J2XMTH3L54WYEmx8QEDuSCLo96ojwe17XaJArgWsm5ja",
                            "srmqPvymJeFKQ4zGQed1GFppgkRHL9kaELCbyksJtPX",
                            "AAGnoCdWmLiyZMNUYCKxXRyxkWarrq5rJZmJPzpzUmtD",
                            "7GJmaSprKPACHwLMDKCW7ujfQQxCRiMzmWccjhtWyLVr",
                            "DWuiywtkWWskikCzb1QcpxfJzLBApJ1Q44EmseoHxJgb",
                            "4DxxfgsFd1STeLGVckL5ghvpuGMJcN7FyxwPtr758kNt",
                            "HhMMcLwsRqZKsxF6YYxPSYCaixNL8JMvpLcTE48ecc2b",
                            "56AFVxzUaRLNSfpLWtDXeLkb8KF4t1XFm5bxjijRdKFG",
                            "AzXP8bpiWUzk8JQjzi6Afx9ZEmg6nSwAK6LrHs6HG4FN",
                            "7YqhdwrG64W4vrkojpjGspMHaduqpBXHnniweavEJcZV",
                            "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                            "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx"
                          ],
                          "activities": [
                            {
                              "name": "RaydiumTokenSwap",
                              "activity_type": "defi_token_swap",
                              "program_id": "675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",
                              "data": {
                                "amm_id": "HEvzmYSVzYQNp5daQaEWw9Gu3NdvCSrwZ2r3BJQNLoYz",
                                "amm_authoriy": "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1",
                                "account": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                                "token_1": "CYsQw9wRvdBTj82VYvP9KWuybPTF927RJAhfqCvnpump",
                                "token_2": "So11111111111111111111111111111111111111112",
                                "amount_1": 15872345,
                                "amount_1_str": "15872345",
                                "amount_2": 8297,
                                "amount_2_str": "8297",
                                "token_decimal_1": 6,
                                "token_decimal_2": 9,
                                "token_account_1_1": "7YqhdwrG64W4vrkojpjGspMHaduqpBXHnniweavEJcZV",
                                "token_account_1_2": "J2XMTH3L54WYEmx8QEDuSCLo96ojwe17XaJArgWsm5ja",
                                "token_account_2_1": "4Xo1YUNAmPjqnbJfqDfraCrqALyTYgVDQk92gk2hoS55",
                                "token_account_2_2": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                                "owner_1": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                                "owner_2": "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1"
                              },
                              "ins_index": 3,
                              "outer_ins_index": -1,
                              "outer_program_id": null,
                              "program_invoke_level": 1,
                              "inst_type": "raydium:swap"
                            }
                          ],
                          "transfers": [
                            {
                              "source_owner": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                              "source": "7YqhdwrG64W4vrkojpjGspMHaduqpBXHnniweavEJcZV",
                              "destination": "J2XMTH3L54WYEmx8QEDuSCLo96ojwe17XaJArgWsm5ja",
                              "destination_owner": "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1",
                              "transfer_type": "spl_transfer",
                              "token_address": "CYsQw9wRvdBTj82VYvP9KWuybPTF927RJAhfqCvnpump",
                              "decimals": 6,
                              "amount_str": "15872345",
                              "amount": 15872345,
                              "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                              "outer_program_id": "675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",
                              "ins_index": 0,
                              "outer_ins_index": 3,
                              "event": "",
                              "fee": {},
                              "base_value": {
                                "token_address": "So11111111111111111111111111111111111111112",
                                "decimals": 9,
                                "amount": 8297,
                                "amount_str": "8297"
                              }
                            },
                            {
                              "source_owner": "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1",
                              "source": "4Xo1YUNAmPjqnbJfqDfraCrqALyTYgVDQk92gk2hoS55",
                              "destination": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                              "destination_owner": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                              "transfer_type": "spl_transfer",
                              "token_address": "So11111111111111111111111111111111111111112",
                              "decimals": 9,
                              "amount_str": "8297",
                              "amount": 8297,
                              "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                              "outer_program_id": "675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",
                              "ins_index": 1,
                              "outer_ins_index": 3,
                              "event": "",
                              "fee": {},
                              "base_value": {
                                "token_address": "CYsQw9wRvdBTj82VYvP9KWuybPTF927RJAhfqCvnpump",
                                "decimals": 6,
                                "amount": 15872345,
                                "amount_str": "15872345"
                              }
                            }
                          ],
                          "inner_instructions": [
                            {
                              "ins_index": 0,
                              "parsed_type": "transfer",
                              "type": "transfer",
                              "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                              "program": "spl-token",
                              "outer_program_id": "675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",
                              "outer_ins_index": 3,
                              "data_raw": {
                                "info": {
                                  "amount": "15872345",
                                  "authority": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                                  "destination": "J2XMTH3L54WYEmx8QEDuSCLo96ojwe17XaJArgWsm5ja",
                                  "source": "7YqhdwrG64W4vrkojpjGspMHaduqpBXHnniweavEJcZV"
                                },
                                "type": "transfer"
                              },
                              "accounts": [],
                              "activities": [],
                              "transfers": [
                                {
                                  "source_owner": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                                  "source": "7YqhdwrG64W4vrkojpjGspMHaduqpBXHnniweavEJcZV",
                                  "destination": "J2XMTH3L54WYEmx8QEDuSCLo96ojwe17XaJArgWsm5ja",
                                  "destination_owner": "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1",
                                  "transfer_type": "spl_transfer",
                                  "token_address": "CYsQw9wRvdBTj82VYvP9KWuybPTF927RJAhfqCvnpump",
                                  "decimals": 6,
                                  "amount_str": "15872345",
                                  "amount": 15872345,
                                  "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                                  "outer_program_id": "675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",
                                  "ins_index": 0,
                                  "outer_ins_index": 3,
                                  "event": "",
                                  "fee": {},
                                  "base_value": {
                                    "token_address": "So11111111111111111111111111111111111111112",
                                    "decimals": 9,
                                    "amount": 8297,
                                    "amount_str": "8297"
                                  }
                                }
                              ],
                              "program_invoke_level": 2
                            },
                            {
                              "ins_index": 1,
                              "parsed_type": "transfer",
                              "type": "transfer",
                              "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                              "program": "spl-token",
                              "outer_program_id": "675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",
                              "outer_ins_index": 3,
                              "data_raw": {
                                "info": {
                                  "amount": "8297",
                                  "authority": "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1",
                                  "destination": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                                  "source": "4Xo1YUNAmPjqnbJfqDfraCrqALyTYgVDQk92gk2hoS55"
                                },
                                "type": "transfer"
                              },
                              "accounts": [],
                              "activities": [],
                              "transfers": [
                                {
                                  "source_owner": "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1",
                                  "source": "4Xo1YUNAmPjqnbJfqDfraCrqALyTYgVDQk92gk2hoS55",
                                  "destination": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                                  "destination_owner": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                                  "transfer_type": "spl_transfer",
                                  "token_address": "So11111111111111111111111111111111111111112",
                                  "decimals": 9,
                                  "amount_str": "8297",
                                  "amount": 8297,
                                  "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                                  "outer_program_id": "675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",
                                  "ins_index": 1,
                                  "outer_ins_index": 3,
                                  "event": "",
                                  "fee": {},
                                  "base_value": {
                                    "token_address": "CYsQw9wRvdBTj82VYvP9KWuybPTF927RJAhfqCvnpump",
                                    "decimals": 6,
                                    "amount": 15872345,
                                    "amount_str": "15872345"
                                  }
                                }
                              ],
                              "program_invoke_level": 2
                            }
                          ],
                          "program_invoke_level": 1,
                          "idl_data": {
                            "input_args": {
                              "discriminator": {
                                "type": "u8",
                                "data": 9
                              },
                              "amountIn": {
                                "type": "u64",
                                "data": 15872345
                              },
                              "minimumAmountOut": {
                                "type": "u64",
                                "data": 0
                              }
                            }
                          },
                          "first_code": 9
                        },
                        {
                          "ins_index": 4,
                          "parsed_type": "closeAccount",
                          "type": "closeAccount",
                          "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                          "program": "spl-token",
                          "outer_program_id": null,
                          "outer_ins_index": -1,
                          "data_raw": {
                            "info": {
                              "account": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                              "destination": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                              "owner": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx"
                            },
                            "type": "closeAccount"
                          },
                          "accounts": [],
                          "activities": [
                            {
                              "name": "closeAccount",
                              "activity_type": "spl_close_account",
                              "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                              "data": {
                                "amount": 2047577,
                                "amount_str": "2047577",
                                "token_address": "So11111111111111111111111111111111111111111",
                                "token_decimals": 9,
                                "closed_account": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                                "authority": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                                "destination": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx"
                              },
                              "ins_index": 4,
                              "outer_ins_index": -1,
                              "outer_program_id": null,
                              "program_invoke_level": 1,
                              "inst_type": "closeAccount"
                            }
                          ],
                          "transfers": [
                            {
                              "source_owner": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                              "source": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                              "destination": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                              "destination_owner": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                              "transfer_type": "spl_close_account",
                              "token_address": "So11111111111111111111111111111111111111111",
                              "decimals": 9,
                              "amount_str": "2047577",
                              "amount": "2047577",
                              "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                              "outer_program_id": null,
                              "ins_index": 4,
                              "outer_ins_index": -1,
                              "event": "closeAccount",
                              "fee": {}
                            }
                          ],
                          "program_invoke_level": 1
                        }
                      ],
                      "programs_involved": [
                        "ComputeBudget111111111111111111111111111111",
                        "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
                        "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                        "11111111111111111111111111111111",
                        "675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8"
                      ],
                      "signer": [
                        "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx"
                      ],
                      "list_signer": [
                        "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx"
                      ],
                      "status": 1,
                      "account_keys": [
                        {
                          "pubkey": "BQDXQXpEBj5ehqKBPFkavTLt2H7c7vg6QxY1ddjwynSx",
                          "signer": true,
                          "source": "transaction",
                          "writable": true
                        },
                        {
                          "pubkey": "4DxxfgsFd1STeLGVckL5ghvpuGMJcN7FyxwPtr758kNt",
                          "signer": false,
                          "source": "transaction",
                          "writable": true
                        },
                        {
                          "pubkey": "4Xo1YUNAmPjqnbJfqDfraCrqALyTYgVDQk92gk2hoS55",
                          "signer": false,
                          "source": "transaction",
                          "writable": true
                        },
                        {
                          "pubkey": "56AFVxzUaRLNSfpLWtDXeLkb8KF4t1XFm5bxjijRdKFG",
                          "signer": false,
                          "source": "transaction",
                          "writable": true
                        },
                        {
                          "pubkey": "5Kuh8qqF3AtkWdRKFRMfD9NdkbVKXndMNimz2EsaRMzb",
                          "signer": false,
                          "source": "transaction",
                          "writable": true
                        },
                        {
                          "pubkey": "7GJmaSprKPACHwLMDKCW7ujfQQxCRiMzmWccjhtWyLVr",
                          "signer": false,
                          "source": "transaction",
                          "writable": true
                        },
                        {
                          "pubkey": "7YqhdwrG64W4vrkojpjGspMHaduqpBXHnniweavEJcZV",
                          "signer": false,
                          "source": "transaction",
                          "writable": true
                        },
                        {
                          "pubkey": "94V2bz4UX1VTUx4U9D6wFT6BWbMjHJg1pBBNeMWYUdWM",
                          "signer": false,
                          "source": "transaction",
                          "writable": true
                        },
                        {
                          "pubkey": "AAGnoCdWmLiyZMNUYCKxXRyxkWarrq5rJZmJPzpzUmtD",
                          "signer": false,
                          "source": "transaction",
                          "writable": true
                        },
                        {
                          "pubkey": "BFk5mKAwdbjX6WdjpfcgdQD2evbG9J9KrDdpsaYdFeCv",
                          "signer": false,
                          "source": "transaction",
                          "writable": true
                        },
                        {
                          "pubkey": "DWuiywtkWWskikCzb1QcpxfJzLBApJ1Q44EmseoHxJgb",
                          "signer": false,
                          "source": "transaction",
                          "writable": true
                        },
                        {
                          "pubkey": "HEvzmYSVzYQNp5daQaEWw9Gu3NdvCSrwZ2r3BJQNLoYz",
                          "signer": false,
                          "source": "transaction",
                          "writable": true
                        },
                        {
                          "pubkey": "HhMMcLwsRqZKsxF6YYxPSYCaixNL8JMvpLcTE48ecc2b",
                          "signer": false,
                          "source": "transaction",
                          "writable": true
                        },
                        {
                          "pubkey": "J2XMTH3L54WYEmx8QEDuSCLo96ojwe17XaJArgWsm5ja",
                          "signer": false,
                          "source": "transaction",
                          "writable": true
                        },
                        {
                          "pubkey": "11111111111111111111111111111111",
                          "signer": false,
                          "source": "transaction",
                          "writable": false
                        },
                        {
                          "pubkey": "ComputeBudget111111111111111111111111111111",
                          "signer": false,
                          "source": "transaction",
                          "writable": false
                        },
                        {
                          "pubkey": "So11111111111111111111111111111111111111112",
                          "signer": false,
                          "source": "transaction",
                          "writable": false
                        },
                        {
                          "pubkey": "SysvarRent111111111111111111111111111111111",
                          "signer": false,
                          "source": "transaction",
                          "writable": false
                        },
                        {
                          "pubkey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                          "signer": false,
                          "source": "transaction",
                          "writable": false
                        },
                        {
                          "pubkey": "srmqPvymJeFKQ4zGQed1GFppgkRHL9kaELCbyksJtPX",
                          "signer": false,
                          "source": "transaction",
                          "writable": false
                        },
                        {
                          "pubkey": "5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1",
                          "signer": false,
                          "source": "transaction",
                          "writable": false
                        },
                        {
                          "pubkey": "675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",
                          "signer": false,
                          "source": "transaction",
                          "writable": false
                        },
                        {
                          "pubkey": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
                          "signer": false,
                          "source": "transaction",
                          "writable": false
                        },
                        {
                          "pubkey": "AzXP8bpiWUzk8JQjzi6Afx9ZEmg6nSwAK6LrHs6HG4FN",
                          "signer": false,
                          "source": "transaction",
                          "writable": false
                        }
                      ],
                      "compute_units_consumed": 54859,
                      "confirmations": null,
                      "version": "legacy",
                      "priority_fee": 1000,
                      "tx_hash": "F16MuS9H67iSTdHqtfRXF4e6DaVVdQSnuBYRzGcFYXrJhgFS3zxmKeRpGNFjYrewT2738u59NA6wXfp2t7KwDSd",
                      "block_time": 1739026554,
                      "log_message": [
                        "Program ComputeBudget111111111111111111111111111111 invoke [1]",
                        "Program ComputeBudget111111111111111111111111111111 success",
                        "Program ComputeBudget111111111111111111111111111111 invoke [1]",
                        "Program ComputeBudget111111111111111111111111111111 success",
                        "Program ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL invoke [1]",
                        "Program log: Create",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA invoke [2]",
                        "Program log: Instruction: GetAccountDataSize",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA consumed 1569 of 94186 compute units",
                        "Program return: TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA pQAAAAAAAAA=",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA success",
                        "Program 11111111111111111111111111111111 invoke [2]",
                        "Program 11111111111111111111111111111111 success",
                        "Program log: Initialize the associated token account",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA invoke [2]",
                        "Program log: Instruction: InitializeImmutableOwner",
                        "Program log: Please upgrade to SPL Token 2022 for immutable owner support",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA consumed 1405 of 87599 compute units",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA success",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA invoke [2]",
                        "Program log: Instruction: InitializeAccount3",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA consumed 3158 of 83717 compute units",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA success",
                        "Program ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL consumed 19458 of 99700 compute units",
                        "Program ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL success",
                        "Program 675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8 invoke [1]",
                        "Program log: ray_log: A1kx8gAAAAAAAAAAAAAAAAABAAAAAAAAAD4cT2WICAAARbZTqhYAAACAeVLb76gAAGkgAAAAAAAA",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA invoke [2]",
                        "Program log: Instruction: Transfer",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA consumed 4645 of 61495 compute units",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA success",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA invoke [2]",
                        "Program log: Instruction: Transfer",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA consumed 4736 of 53869 compute units",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA success",
                        "Program 675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8 consumed 32186 of 80242 compute units",
                        "Program 675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8 success",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA invoke [1]",
                        "Program log: Instruction: CloseAccount",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA consumed 2915 of 48056 compute units",
                        "Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA success"
                      ],
                      "recent_block_hash": "49Qpr6xmrBMmNDcKgSV1g2hYkpmdLRR3JQ9QT4pBrT78",
                      "tx_status": "finalized"
                    },
                    "metadata": {
                      "tokens": {
                        "So11111111111111111111111111111111111111112": {
                          "token_address": "So11111111111111111111111111111111111111112",
                          "token_name": "Wrapped SOL",
                          "token_symbol": "SOL",
                          "token_icon": "https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png"
                        },
                        "CYsQw9wRvdBTj82VYvP9KWuybPTF927RJAhfqCvnpump": {
                          "token_address": "CYsQw9wRvdBTj82VYvP9KWuybPTF927RJAhfqCvnpump",
                          "token_name": "Floppy",
                          "token_symbol": "Floppy",
                          "token_icon": "https://ipfs.io/ipfs/QmPBSicbWES5WxGxx2i5JFeC4jLUYNusZNZeajbobx37vv"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/transaction/actions": {
      "get": {
        "tags": [
          "Transaction APIs"
        ],
        "operationId": "transactionApi",
        "summary": "transaction actions",
        "description": "Get the actions of a transaction. Return the actions like: transfers, swap activities, nft activities...",
        "parameters": [
          {
            "name": "tx",
            "in": "query",
            "description": "Transaction Address",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "tx_hash": {
                          "type": "string",
                          "description": "Signature of transaction"
                        },
                        "block_id": {
                          "type": "number",
                          "description": "Slot number"
                        },
                        "block_time": {
                          "type": "number",
                          "description": "UnixTime of the slot"
                        },
                        "time": {
                          "type": "string",
                          "description": "Time of the slot"
                        },
                        "fee": {
                          "type": "number",
                          "description": "Fee of transaction"
                        },
                        "transfers": {
                          "type": "array",
                          "description": "List transfer activities on transaction"
                        },
                        "activities": {
                          "type": "array",
                          "description": "List Defi and NFT activities on transaction"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": {
                      "tx_hash": "5FCvNAzfucpzCPZ87Wr5KtzWfjz8WEuNiFQNELeHNZGDz9kwyUUfvyfkz6xZbkiWTnKMeQ3QVqYaKNB7Z38RrdJU",
                      "block_id": 276736926,
                      "block_time": 1720605023,
                      "time": "2024-07-10T09:50:23.000Z",
                      "fee": 74004,
                      "transfers": [
                        {
                          "source_owner": "NHtdVXcUuzULRJ3GkupLnZcxmUZ4rTP1u9kVkRzcash",
                          "source": "7CkEbKe131pb4dAW1kTJPSv5oaMBvFg9Was4v8P2PX7c",
                          "destination": "9zXV3Ju93iaMK36NHQ7kvRp7SfkprHJhAw8FFBQn2P9M",
                          "destination_owner": "7qt1qBnQ5CNNpMH1no6jYAzuyazP5QWXsUZB7dot5kga",
                          "transfer_type": "ACTIVITY_SPL_TRANSFER",
                          "token_address": "So11111111111111111111111111111111111111112",
                          "decimals": 9,
                          "amount_str": "140000000",
                          "amount": 140000000,
                          "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                          "outer_program_id": "bank7GaK8LkjyrLpSZjGuXL8z7yae6JqbunEEnU9FS4",
                          "ins_index": 1,
                          "outer_ins_index": 2
                        }
                      ],
                      "activities": [
                        {
                          "name": "MeteoraDlmmSwap",
                          "activity_type": "ACTIVITY_TOKEN_SWAP",
                          "program_id": "LBUZKhRxPF3XUpBCjp4YzTKgLccjZhTSDM9YuVaPwxo",
                          "data": {
                            "amm_id": "7qt1qBnQ5CNNpMH1no6jYAzuyazP5QWXsUZB7dot5kga",
                            "amm_authority": null,
                            "account": "NHtdVXcUuzULRJ3GkupLnZcxmUZ4rTP1u9kVkRzcash",
                            "token_1": "So11111111111111111111111111111111111111112",
                            "token_2": "JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN",
                            "amount_1": 140000000,
                            "amount_1_str": "140000000",
                            "amount_2": 25271320,
                            "amount_2_str": "25271320",
                            "token_decimal_1": 9,
                            "token_decimal_2": 6,
                            "token_account_1_1": "7CkEbKe131pb4dAW1kTJPSv5oaMBvFg9Was4v8P2PX7c",
                            "token_account_1_2": "9zXV3Ju93iaMK36NHQ7kvRp7SfkprHJhAw8FFBQn2P9M",
                            "token_account_2_1": "HoL4xqoB9LteY7TdVjUVpw2B8YAN1wnqsbEryNRdvmuP",
                            "token_account_2_2": "HMDfkgnqHSsrVZ6XikNwALZ89GiSsAu7GBx1UkUxd6ts",
                            "owner_1": "NHtdVXcUuzULRJ3GkupLnZcxmUZ4rTP1u9kVkRzcash",
                            "owner_2": "7qt1qBnQ5CNNpMH1no6jYAzuyazP5QWXsUZB7dot5kga"
                          },
                          "ins_index": 0,
                          "outer_ins_index": 2,
                          "outer_program_id": "bank7GaK8LkjyrLpSZjGuXL8z7yae6JqbunEEnU9FS4"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/block/last": {
      "get": {
        "tags": [
          "Block APIs"
        ],
        "operationId": "blockLastApi",
        "summary": "block last",
        "description": "Get the list of the latest blocks",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of blocks should be returned",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100,
              "default": 10,
              "enum": [
                10,
                20,
                30,
                40,
                60,
                100
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    20,
                    30,
                    40,
                    60,
                    100
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fee_rewards": {
                            "type": "number",
                            "description": "The total fee rewards for this block"
                          },
                          "transactions_count": {
                            "type": "number",
                            "description": "The number of transactions of this block"
                          },
                          "current_slot": {
                            "type": "number",
                            "description": "The current slot index of this block"
                          },
                          "block_height": {
                            "type": "number",
                            "description": "The number of blocks beneath this block"
                          },
                          "block_time": {
                            "type": "number",
                            "description": "The Unix time of this block"
                          },
                          "time": {
                            "type": "string",
                            "description": "The time of this block"
                          },
                          "blockhash": {
                            "type": "string",
                            "description": "The blockhash of this block"
                          },
                          "parent_slot": {
                            "type": "string",
                            "description": "The slot index of this block's parent"
                          },
                          "previous_block_hash": {
                            "type": "string",
                            "description": "The blockhash of this block's parent"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "fee_rewards": 6119798,
                        "transactions_count": 1565,
                        "current_slot": 282507761,
                        "block_height": 261598527,
                        "block_time": 1723200048,
                        "time": "2024-08-09T10:40:48.000Z",
                        "block_hash": "E93xB3KesRfAsrB8XZHGaiZZDEREpNHf9pmsNhqSdwd6",
                        "parent_slot": 282507760,
                        "previous_block_hash": "2DQuwVxXsPhbEKhF45GSnKuTF7Nwy14DWYtGuQBf8fZR"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: block is not allowed"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/block/transactions": {
      "get": {
        "tags": [
          "Block APIs"
        ],
        "operationId": "blockTransactionApi",
        "summary": "block transactions",
        "description": "Get the list of transactions of a block",
        "parameters": [
          {
            "name": "block",
            "in": "query",
            "description": "The slot index of a block",
            "required": true,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100,
              "default": 10,
              "enum": [
                10,
                20,
                30,
                40,
                60,
                100
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    20,
                    30,
                    40,
                    60,
                    100
                  ]
                }
              ]
            }
          },
          {
            "name": "exclude_vote",
            "in": "query",
            "description": "Excludes vote transactions from the results",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "program",
            "in": "query",
            "description": "The program used to filter transactions that interact with it",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "The total number of transactions in this block"
                        },
                        "transactions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "slot": {
                                "type": "number",
                                "description": "Slot number of the transaction"
                              },
                              "fee": {
                                "type": "number",
                                "description": "The fee of the transaction"
                              },
                              "status": {
                                "type": "string",
                                "description": "The status of the transaction: Success or Fail"
                              },
                              "signer": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The signers of the transaction"
                              },
                              "block_time": {
                                "type": "number",
                                "description": "The Unix time of the slot"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "Transaction signature"
                              },
                              "parsed_instructions": {
                                "type": "array",
                                "description": "The list of transaction instructions",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the instruction"
                                    },
                                    "program": {
                                      "type": "string",
                                      "description": "The name of the program"
                                    },
                                    "program_id": {
                                      "type": "string",
                                      "description": "The address of the program"
                                    }
                                  }
                                }
                              },
                              "program_ids": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The list of addresses of programs involved in the transaction"
                              },
                              "time": {
                                "type": "string",
                                "description": "The time of the slot"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": {
                      "total": 1513,
                      "transactions": [
                        {
                          "slot": 281844070,
                          "fee": 5000,
                          "status": "Success",
                          "signer": [
                            "GHscu7RUsYh2ChbdrW2wFyFpHKrtkuPYZB2XbBRxMjCW"
                          ],
                          "block_time": 1722920234,
                          "tx_hash": "4dqr5SruMWyv6z31Xp2DCmeyEGwaewvqCe8shfxKXRhUqaF8naGq7TTyVafHz7WDABM5ZAvhsh3GJAwc9JNySGrG",
                          "parsed_instructions": [
                            {
                              "type": "compactupdatevotestate",
                              "program": "vote",
                              "program_id": "Vote111111111111111111111111111111111111111"
                            }
                          ],
                          "program_ids": [
                            "Vote111111111111111111111111111111111111111"
                          ],
                          "time": "2024-08-06T04:57:14.000Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: block must be a number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/block/detail": {
      "get": {
        "tags": [
          "Block APIs"
        ],
        "operationId": "blockDetailApi",
        "summary": "block detail",
        "description": "Get the details of a block",
        "parameters": [
          {
            "name": "block",
            "in": "query",
            "description": "The slot index of a block",
            "required": true,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "fee_rewards": {
                          "type": "number",
                          "description": "The total fee rewards for this block"
                        },
                        "transactions_count": {
                          "type": "number",
                          "description": "The number of transactions of this block"
                        },
                        "current_slot": {
                          "type": "number",
                          "description": "The current slot index of this block"
                        },
                        "block_height": {
                          "type": "number",
                          "description": "The number of blocks beneath this block"
                        },
                        "block_time": {
                          "type": "number",
                          "description": "The Unix time of this block"
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of this block"
                        },
                        "blockhash": {
                          "type": "string",
                          "description": "The blockhash of this block"
                        },
                        "parent_slot": {
                          "type": "string",
                          "description": "The slot index of this block's parent"
                        },
                        "previous_block_hash": {
                          "type": "string",
                          "description": "The blockhash of this block's parent"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": {
                      "blockhash": "8Gsd6Bky9RJAUKNRae5mrbzQkPPbeMHUXFnxJ5jEnsXQ",
                      "fee_rewards": 19674247,
                      "transactions_count": 1513,
                      "block_height": 260946879,
                      "block_time": 1722920234,
                      "time": "2024-08-06T04:57:14.000Z",
                      "parent_slot": 281844069,
                      "previous_block_hash": "G9Cnb8CguMEcKSZQuUvRc2DP1gGTvTjWE3XaqCpAGZd5"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: block must be a number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/market/list": {
      "get": {
        "tags": [
          "Market APIs"
        ],
        "operationId": "marketListApi",
        "summary": "new listing pool/market",
        "description": "Get the list of pool markets",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number items per page",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100,
              "default": 10,
              "enum": [
                10,
                20,
                30,
                40,
                60,
                100
              ],
              "anyOf": [
                {
                  "type": "number",
                  "enum": [
                    10,
                    20,
                    30,
                    40,
                    60,
                    100
                  ]
                }
              ]
            }
          },
          {
            "name": "program",
            "in": "query",
            "description": "Program owner address",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pool_address": {
                            "type": "string",
                            "description": "Address of pool market"
                          },
                          "program_id": {
                            "type": "string",
                            "description": "Program owner of pool market"
                          },
                          "token1": {
                            "type": "string",
                            "description": "Address of token 1"
                          },
                          "token1_account": {
                            "type": "string",
                            "description": "Token account of token 1"
                          },
                          "token2": {
                            "type": "string",
                            "description": "Address of token 1"
                          },
                          "token2_account": {
                            "type": "string",
                            "description": "Token account of token 2"
                          },
                          "created_time": {
                            "type": "number",
                            "description": "The Unix epoch time that token was created"
                          },
                          "total_trades_24h": {
                            "type": "number",
                            "description": "Total trades in 24h"
                          },
                          "total_volume_24h": {
                            "type": "number",
                            "description": "Total volume in 24h"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "pool_address": "FpCMFDFGYotvufJ7HrFHsWEiiQCGbkLCtwHiDnh7o28Q",
                        "program_id": "whirLbMiicVdio4qvUfM5KAg6Ct8VwpYzGff3uctyCc",
                        "token1": "So11111111111111111111111111111111111111112",
                        "token1_account": "6mQ8xEaHdTikyMvvMxUctYch6dUjnKgfoeib2msyMMi1",
                        "token2": "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",
                        "token2_account": "AQ36QRk3HAe6PHqBCtKTQnYKpt2kAagq9YoeTqUPMGHx",
                        "total_volume_24h": 6715996,
                        "total_trade_24h": 25377,
                        "created_time": 1719792010
                      },
                      {
                        "pool_address": "4eJ1jCPysCrEH53VUAxgNT8BMccXsgHX1nX4FxXAUVWy",
                        "program_id": "whirLbMiicVdio4qvUfM5KAg6Ct8VwpYzGff3uctyCc",
                        "token1": "USDH1SM1ojwWUga67PGrgFWUHibbjqMvuMaDkRJTgkX",
                        "token1_account": "2ads2xeSdmHNV8BAbZgcyPr2q1AJ24KfCZ3WNEgV25x3",
                        "token2": "mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So",
                        "token2_account": "CEtPaTBXmn2zDEx1w2xt12ZxfcKWLBKzumeHCFNSuCmW",
                        "total_volume_24h": 956,
                        "total_trade_24h": 62,
                        "created_time": 1719792011
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: \"sort_order\" must be one of [asc, desc]"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/market/info": {
      "get": {
        "tags": [
          "Market APIs"
        ],
        "operationId": "marketInfoApi",
        "summary": "get market info",
        "description": "Get token market info",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "Market Id",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "pool_address": {
                          "type": "string",
                          "description": "The pool address"
                        },
                        "program_id": {
                          "type": "string",
                          "description": "The program owner"
                        },
                        "token1": {
                          "type": "string",
                          "description": "The address of token 1"
                        },
                        "token2": {
                          "type": "string",
                          "description": "The address of token 2"
                        },
                        "token1_account": {
                          "type": "string",
                          "description": "The address of token account 1"
                        },
                        "token2_account": {
                          "type": "string",
                          "description": "The address of token account 2"
                        },
                        "token1_amount": {
                          "type": "number",
                          "description": "The balance of token account 1"
                        },
                        "token2_amount": {
                          "type": "number",
                          "description": "The balance of token account 2"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": {
                      "pool_address": "7eexH14UjhNxJe6zTT3f1Vb1E8iACsBMVaWheDEmxdT2",
                      "program_id": "LBUZKhRxPF3XUpBCjp4YzTKgLccjZhTSDM9YuVaPwxo",
                      "token1": "DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263",
                      "token2": "So11111111111111111111111111111111111111112",
                      "token1_account": "77MR2zLM2BQNbZhQDMx82SgRcx2vQumfMQLLfPrSio8k",
                      "token2_account": "9iKvd5kvcFGKAHx489rcBS3sX8nSTsouLFBvQirwNhGG",
                      "token1_amount": 2884919764.07666,
                      "token2_amount": 11135.14329621
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/market/volume": {
      "get": {
        "tags": [
          "Market APIs"
        ],
        "operationId": "marketVolumeApi",
        "summary": "get market volume",
        "description": "Get token market volume",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "Market Id",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 30
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "Used when you want to filter data by time. Format time: YYYYMMDD. You need to pass array into http query to filter by start and end time. Example: ?time[]=20240701&time[]=20240715",
            "required": false,
            "schema": {
              "type": "array",
              "minimum": 1,
              "maximum": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "array",
                      "properties": {
                        "pool_address": {
                          "type": "string",
                          "description": "The pool address"
                        },
                        "program_id": {
                          "type": "string",
                          "description": "The program owner"
                        },
                        "total_volume_24h": {
                          "type": "number",
                          "description": "Total volume 24h"
                        },
                        "total_volume_change_24h": {
                          "type": "number",
                          "description": "Total volume change percentage 24h"
                        },
                        "total_trades_24h": {
                          "type": "number",
                          "description": "The address of token account 1"
                        },
                        "total_trades_change_24h": {
                          "type": "number",
                          "description": "Total trades change percentage 24h"
                        },
                        "days": {
                          "type": "array",
                          "description": "Day and value of volume",
                          "properties": {
                            "day": {
                              "type": "number",
                              "description": "Day"
                            },
                            "value": {
                              "type": "number",
                              "description": "Volume number"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": {
                      "pool_address": "7eexH14UjhNxJe6zTT3f1Vb1E8iACsBMVaWheDEmxdT2",
                      "program_id": "LBUZKhRxPF3XUpBCjp4YzTKgLccjZhTSDM9YuVaPwxo",
                      "total_volume_24h": 2212179,
                      "total_volume_change_24h": -38.36077460277853,
                      "total_trades_24h": 4124,
                      "total_trades_change_24h": -31.01357904946654,
                      "days": [
                        {
                          "day": 20241114,
                          "value": 2069898
                        },
                        {
                          "day": 20241115,
                          "value": 1765762
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "code": 1100,
                      "message": "Validation Error: Address [TmUEfZi6dHe7DcFq2ALvB2tbB] is invalid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/monitor/usage": {
      "get": {
        "tags": [
          "Monitoring APIs"
        ],
        "operationId": "monitorUsageApi",
        "summary": "monitor usage",
        "description": "Get the used Compute Units of a subscriber",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "The subscription email"
                        },
                        "renew_date": {
                          "type": "string",
                          "description": "The time when the user renewed the subscription"
                        },
                        "end_date": {
                          "type": "string",
                          "description": "The time when the subscription ends"
                        },
                        "last_cu_reset_date": {
                          "type": "string",
                          "description": "The last CU reset time"
                        },
                        "remaining_cus": {
                          "type": "number",
                          "description": "The remaining Compute Units"
                        },
                        "usage_cus": {
                          "type": "number",
                          "description": "The used Compute Units"
                        },
                        "total_requests_24h": {
                          "type": "number",
                          "description": "The total of requests over the last 24h"
                        },
                        "success_rate_24h": {
                          "type": "number",
                          "description": "The rate of successful requests over the last 24h"
                        },
                        "total_cu_24h": {
                          "type": "number",
                          "description": "The total of CU usage over the last 24h"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "data": {
                      "remaining_cus": 999207030,
                      "usage_cus": 1792970,
                      "total_requests_24h": 3092,
                      "success_rate_24h": 99.48253557567918,
                      "total_cu_24h": 153100
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Status of Api"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number",
                          "description": "Error Code for API"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message to describe error"
                        }
                      }
                    }
                  },
                  "example": {
                    "success": false,
                    "errors": {
                      "message": "Invalid token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
